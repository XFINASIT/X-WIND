C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
      SUBROUTINE FSECTION
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

      COMMON /CONSTINT/ MTOTI(10),NCONI(5000),ICONDT(1)
      COMMON /CONSTREL/ MTOTR(10),NCONR(5000),RCONDT(1)

	DIMENSION NPM(10),NPI(10),IP(12),SS(2,12),TT(2,12)
	ALLOCATABLE FSEC(:),FDUM(:),AFS(:),FWRP(:)

	NFSCL = 3000
	CALL DIROPEN(NFSCL,518)

C	DATIN FILE  ITO
	CALL INTFILL('%IOL',ITI,1,1,0)  !UNIT 1 FILE
C	FILE FOR PRINTING  NOT=ISO
	CALL INTFILL('%IOL',NOT,1,3,0)

	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',NSEC,1)
      CALL FREINT('C',MAXC,1)
      CALL FREINT('S',MAXS,1)
      CALL FREINT('P',MAXP,1)
	IPRN = 0
      CALL FREINT('R',IPRN,1)
 
	IF(NSEC.LE.0) RETURN

	MCS = 15*(MAXC+MAXS)  !MAX FOR FIBER PROP
	MRD = 15              !MAX FOR READY PROP
	MX  = MAX0(MCS,MRD)      

	MRX  = 15
	MAXF = MAXC+MAXS

	MTOUR = 1000 !MAX NUM CONTOUR POINT

	CALL INTFILL('%FGF',NGRF,1,1,0)  !NUMBER OF FRAME GAUSS POINT CALLING HERE (ALREADY STORED IN SUB. ELMNPT)
	NGP = NGRF   !FIRST AND LAST END + NUM GAUSS

C	CALL DEFNREL('%FSC',KFSC,NGP*MX*MAXP,NSEC)   !SECTION PROP  MX,NGP,MAXP,NSEC
C	CALL RELZERO('%FSC')
	ALLOCATE(FSEC(NGP*MX*MAXP),FDUM(NGP*MX*MAXP),AFS(MRX))
	ALLOCATE(FWRP(3*NGP*MTOUR))
	CALL DEFNINT('$FSC',LFMS,1,10)               !SECTION DATA (MAX VALUE)
	CALL INTZERO('$FSC')
	CALL DEFNREL('$RNG',LRNG,1,NSEC)             !SECTION ROTATION DATA
	CALL RELZERO('$RNG')
	CALL DEFNINT('FPT1',LFP1,2,NSEC)             !SECTION PART DATA
	CALL INTZERO('FPT1')
	CALL DEFNINT('FPT2',LFP2,MAXP,NSEC)          !SECTION PART-FIBER DATA
	CALL INTZERO('FPT2')

C	STRESS CALCULATION OF SECTION PART
	MXSTRP = 2*4*12  !MAXIMUM STRESS POINT PER PART   NUM-S-T  2 SECTION I-J
	CALL DEFNINT('@FCS',KFCS,MAXP,NSEC)            !SECTION PART NUMBER OF STRESS POINT
	CALL INTZERO('@FCS')
	CALL DEFNREL('@FST',KFST,2*MXSTRP*MAXP,NSEC)   !STRESS POINT COORDINATES
	CALL RELZERO('@FST')

	CALL INTFILL('$FSC',NSEC ,1,1 ,1)  !NUM OF SECTION
	CALL INTFILL('$FSC',MAXC ,1,2 ,1)  !MAX NUM OF CONCRETE FIBER 
	CALL INTFILL('$FSC',MAXS ,1,3 ,1)  !MAX NUM OF STEEL FIBER 
	CALL INTFILL('$FSC',MAXP ,1,4 ,1)  !MAX NUM OF PART
	CALL INTFILL('$FSC',MX   ,1,5 ,1)  !MAX DATA FOR ONE GAUSS
	CALL INTFILL('$FSC',NGP  ,1,6 ,1)  !NUM GAUSS
C	CALL INTFILL('$FSC',MXPIB,1,7 ,1)  !STORE MAXIMUM NUM FIBER IN EACH PART OF EACH SECTION --SEE BELOW
	CALL INTFILL('$FSC',NFSCL,1,8 ,1)  !FILE ID FOR SECTION DATA
	CALL INTFILL('$FSC',MRX  ,1,9 ,1)  !MAX DATA PER RECORD
	CALL INTFILL('$FSC',MAXF ,1,10,1)  !MAX FIBER
	WRITE(NOT,100) NSEC,MAXC,MAXS,MAXP,MX

	MXPIB = 0
	DO 5000 ISEC = 1,NSEC

C	READ HEADER
	CALL FREBUF
	CALL FREECH  

	CALL FREBUF
	CALL FREECH     
	CALL FREINT(' ',N,1)
	CALL FREINT('M',M,1)     !SEC TYPE  0=READY PROP. 1=FIBER
	CALL FREINT('P',MPRT,1)  !SECTION PART

	RANG = 0.0D0
	CALL FREREL('Z',RANG,1)  !SECTION ROTATION
	CALL RELFILL('$RNG',RANG,1,N,1)


	CALL INTFILL('FPT1',M   ,1,N,1) !STORE SEC TYPE FLAG  0=READY PROP. 1=FIBER
	CALL INTFILL('FPT1',MPRT,2,N,1) !STORE NUMBER OF PART FOR THIS SECTION


C	----------------------------------------
	SELECTCASE(M)
C	----------------------------------------
	CASE(0) !READY PROP
	DO 1000 IPRT = 1,MPRT
	NUMS = 1  + NGP*MX*(IPRT-1)
	CALL FMREADY(FSEC(NUMS),MX,NGP)

C	SET MINIMUM NUMBER OF FIBER 
	NPIB = 1
	CALL INTFILL('FPT2',NPIB,IPRT,N,1)  !STORE NUMBER OF FIBER FOR THIS PART
	IF(NPIB.GT.MXPIB) MXPIB = NPIB

	AFS(1:MRX) = 0.0D0
	DO IGP = 1,NGP
	NN1 = NUMS + MX*(IGP-1)
	DO IPIB = 1,NPIB
	NN2 =  NN1 + 15*(IPIB-1)
	NN3 =  NN2 + 15 - 1
	AFS(1:15) = FSEC(NN2:NN3)
	NPM(1:5) = [MRX,MAXF,NGP,MAXP,NSEC]
	NPI(1:5) = [MRX,IPIB,IGP,IPRT,N   ]
	CALL PUTREAL(NFSCL,AFS,NPM,NPI,5,2)              
	ENDDO
	ENDDO
C
C	GOTO 1000
	CALL FREBUF   !READ STRESS POINT COORDINATE
	CALL FREECH  
	CALL FREINT('N',NST,1) !A
	CALL INTFILL('@FCS',NST,IPRT,N,1) 
	
	SS = 0.0D0
	TT = 0.0D0
	WW = 0.0D0 !Warping
	DO II = 1,NST
	READ(ITI,*) IP(II),SS(1,II),TT(1,II)
	ENDDO
	DO II = 1,NST
	READ(ITI,*) IP(II),SS(2,II),TT(2,II)
	ENDDO
	DO II = 1,NST
	IS  = IP(II)
	FIS = FLOAT(IS)
	NIJ = 1
	NUM = 4*(NIJ-1)+4*2*(IS-1)+4*2*12*(IPRT-1)
	CALL RELFILL('@FST',FIS  ,1+NUM,N,1)
	CALL RELFILL('@FST',SS(1,II),2+NUM,N,1)
	CALL RELFILL('@FST',TT(1,II),3+NUM,N,1)
	CALL RELFILL('@FST',WW      ,4+NUM,N,1)
	NIJ = 2
	NUM = 4*(NIJ-1)+4*2*(IS-1)+4*2*12*(IPRT-1)
	CALL RELFILL('@FST',FIS  ,1+NUM,N,1)
	CALL RELFILL('@FST',SS(2,II),2+NUM,N,1)
	CALL RELFILL('@FST',TT(2,II),3+NUM,N,1)
	CALL RELFILL('@FST',WW      ,4+NUM,N,1)
	ENDDO
C
1000	CONTINUE
	
C	----------------------------------------
	CASE(1) !FIBER PROP

C	CALL DEFNREL('&DUM',KDUM,NGP*MX*MAXP,1)

	CALL FMFIBER1(FDUM,FWRP,MX,MAXP,NGP,NFIB,NTOUR,MPRT)

C
	IPRT = 1  !DEFAULT TO PART 1 FOr STRESS POINT
	CALL FREBUF   !READ STRESS POINT COORDINATE
	CALL FREECH  
	CALL FREINT('N',NST,1) !A
	CALL INTFILL('@FCS',NST,IPRT,N,1) 
	SS = 0.0D0
	TT = 0.0D0



	DO II = 1,NST
	READ(ITI,*) IP(II),SS(1,II),TT(1,II)
	ENDDO
	DO II = 1,NST
	READ(ITI,*) IP(II),SS(2,II),TT(2,II)
	ENDDO
	DO II = 1,NST
	IS  = IP(II)
	FIS = FLOAT(IS)
	NIJ = 1
	NUM = 4*(NIJ-1)+4*2*(IS-1)+4*2*12*(IPRT-1)
	CALL STSWARP(FDUM,FWRP,MX,MAXP,1  ,NTOUR,SS(1,II),TT(1,II),WW)  !GET WARPING FUNC. AT STRES POINT FOR I SECTION
	CALL RELFILL('@FST',FIS  ,1+NUM,N,1)
	CALL RELFILL('@FST',SS(1,II),2+NUM,N,1)
	CALL RELFILL('@FST',TT(1,II),3+NUM,N,1)
	CALL RELFILL('@FST',WW      ,4+NUM,N,1)
	NIJ = 2
	NUM = 4*(NIJ-1)+4*2*(IS-1)+4*2*12*(IPRT-1)
	CALL STSWARP(FDUM,FWRP,MX,MAXP,NGP,NTOUR,SS(1,II),TT(1,II),WW)  !GET WARPING FUNC. AT STRES POINT FOR J SECTION
	CALL RELFILL('@FST',FIS  ,1+NUM,N,1)
	CALL RELFILL('@FST',SS(2,II),2+NUM,N,1)
	CALL RELFILL('@FST',TT(2,II),3+NUM,N,1)
	CALL RELFILL('@FST',WW      ,4+NUM,N,1)
	ENDDO
C

	DO 3000 IPRT = 1,MPRT
	NUMS = 1  + NGP*MX*(IPRT-1)
	CALL FMFIBER2(FDUM,FSEC(NUMS),MX,MAXP,
	1			  NGP,NFIB,IPRT,NPIB)
	CALL INTFILL('FPT2',NPIB,IPRT,N,1)  !STORE NUMBER OF FIBER FOR THIS PART
	IF(NPIB.GT.MXPIB) MXPIB = NPIB

	AFS(1:MRX) = 0.0D0
	DO IGP = 1,NGP
	NN1 = NUMS + MX*(IGP-1)
	DO IPIB = 1,NPIB
	NN2 =  NN1 + 15*(IPIB-1)
	NN3 =  NN2 + 15 - 1
	AFS(1:15) = FSEC(NN2:NN3)
	NPM(1:5) = [MRX,MAXF,NGP,MAXP,NSEC]
	NPI(1:5) = [MRX,IPIB,IGP,IPRT,N   ]
	CALL PUTREAL(NFSCL,AFS,NPM,NPI,5,2)              
	ENDDO
	ENDDO
3000	CONTINUE

C	CALL DELTREL('&DUM')
C	----------------------------------------
	ENDSELECT
C	----------------------------------------


5000	CONTINUE


	DEALLOCATE(FDUM,FSEC,FWRP)
	DEALLOCATE(AFS)


	CALL INTFILL('$FSC',MXPIB,1,7,1)  !STORE MAXIMUM NUM FIBER IN EACH PART OF EACH SECTION

	IF(IPRN.EQ.0) RETURN
C	----------------------------------------
C	PRINT IT OUT
C	----------------------------------------
	CALL INTFILL('$FSC',NSEC,1,1,0)
	CALL INTFILL('$FSC',MAXP,1,4,0)
	CALL INTFILL('$FSC',MX  ,1,5,0)	
	CALL INTFILL('$FSC',NGP ,1,6,0)
	CALL INTFILL('$FSC',NFSCL,1,8 ,0)  !FILE ID FOR SECTION DATA
	CALL INTFILL('$FSC',MRX  ,1,9 ,0)  !MAX DATA PER RECORD
	CALL INTFILL('$FSC',MAXF ,1,10,0)  !MAX FIBER

	DO ISEC = 1,NSEC


	CALL INTFILL('FPT1',M   ,1,ISEC,0) !STORE SEC TYPE FLAG
	CALL INTFILL('FPT1',MPRT,2,ISEC,0) !STORE NUMBER OF PART
	CALL RELFILL('$RNG',RANG,1,ISEC,0) !ROTATION ANGLE

	IF(M.EQ.0) WRITE(NOT,101) ISEC,MPRT,RANG
	IF(M.EQ.1) WRITE(NOT,102) ISEC,MPRT,RANG



	DO IPRT = 1,MPRT
	CALL INTFILL('FPT2',NPIB,IPRT,ISEC,0)  !NUMBER OF FIBER FOR THIS PART
	CALL FSECPRN(M,MX,NGP,NPIB,IPRT,NOT,
	1			 ISEC,NSEC,MAXP,MAXF,MRX,NFSCL)

	ENDDO

	ENDDO
C	----------------------------------------
C	----------------------------------------


100	FORMAT(//1X,'NUMBER OF FRAME SECTION TYPE . . . .N=',I5/,
	1	     1X,'MAXIMUM NUMBER OF CONCRETE FIBER . .C=',I5/,
	1	     1X,'MAXIMUM NUMBER OF STEEL FIBER. . . .S=',I5/,
	1	     1X,'MAXIMUM NUMBER OF SECTION PART . . .P=',I5/,
	1	     1X,'MAXIMUM DATA FOR ONE GUASS POINT . MX=',I15/)

101	FORMAT(//5X,'SECTION NO . . . . . . . . . . .N=',I5/,
	1	     5X,'FRAME SECTION TYPE . . . . . . .M=','READY'/,
	1	     5X,'NUMBER OF SECTION PART . . . . .P=',I5/,
     1		 5X,'ROTATION ANGLE (DEG) . . . . . .Z=',E15.6)
102	FORMAT(//5X,'SECTION NO . . . . . . . . . . .N=',I5/,
	1	     5X,'FRAME SECTION TYPE . . . . . . .M=','FIBER'/,
	1	     5X,'NUMBER OF SECTION PART . . . . .P=',I5/,
     1		 5X,'ROTATION ANGLE (DEG) . . . . . .Z=',E15.6)



	RETURN
	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
      SUBROUTINE FSECPRN(M,MX,NG,NPIB,IPRT,NOT,
	1				   ISEC,NSEC,MAXP,MAXF,MRX,NFSCL)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

	DIMENSION SC(MRX,NG),PROP(7,NG),NPM(10),NPI(10)

	

	SELECT CASE(M)

	CASE(0)  !READY PROP

	DO IG = 1,NG
	DO IPIB = 1,NPIB
	NPM(1:5) = [MRX,MAXF,NG,MAXP,NSEC]
	NPI(1:5) = [MRX,IPIB,IG,IPRT,ISEC]
	CALL PUTREAL(NFSCL,SC(1,IG),NPM,NPI,5,0)   
	ENDDO
	ENDDO

	WRITE(NOT,100) IPRT,NG
	WRITE(NOT,101) SC(1 ,1:NG) 
	WRITE(NOT,102) SC(2 ,1:NG) 
	WRITE(NOT,103) SC(3 ,1:NG) 
	WRITE(NOT,104) SC(4 ,1:NG) 
	WRITE(NOT,105) SC(5 ,1:NG) 
	WRITE(NOT,106) SC(6 ,1:NG) 
	WRITE(NOT,107) SC(7 ,1:NG) 
	WRITE(NOT,108) SC(8 ,1:NG) 
	WRITE(NOT,109) SC(9 ,1:NG) 
	WRITE(NOT,110) SC(10,1:NG) 
	WRITE(NOT,111) INT(SC(11,1:NG))
	WRITE(NOT,112) INT(SC(12,1:NG))



	CASE(1)  !FIBER PROP
	WRITE(NOT,200) IPRT,NG,NPIB
	PROP(1:7,1:NG) = 0.0D0
	DO I = 1,NPIB

	DO IG = 1,NG
	NPM(1:5) = [MRX,MAXF,NG,MAXP,NSEC]
	NPI(1:5) = [MRX,I   ,IG,IPRT,ISEC]
	CALL PUTREAL(NFSCL,SC(1,IG),NPM,NPI,5,0)   
	ENDDO

	DO J = 1,NG
	PROP(1,J) = PROP(1,J) + SC(1,J)
	PROP(2,J) = PROP(2,J) + SC(1,J)*SC(3,J)
	PROP(3,J) = PROP(3,J) + SC(1,J)*SC(2,J)
	PROP(4,J) = PROP(4,J) + SC(1,J)*SC(3,J)*SC(3,J)
	PROP(5,J) = PROP(5,J) + SC(1,J)*SC(2,J)*SC(2,J)
	PROP(6,J) = PROP(6,J) + SC(1,J)*SC(2,J)*SC(3,J)
	PROP(7,J) = PROP(7,J) + SC(1,J)*
	1			(SC(2,J)*SC(2,J) + SC(3,J)*SC(3,J))
	ENDDO


	WRITE(NOT,201) SC(1,1:NG)
	WRITE(NOT,202) SC(2,1:NG)
	WRITE(NOT,203) SC(3,1:NG)
	WRITE(NOT,204) INT(SC(4,1:NG))
	WRITE(NOT,205) INT(SC(5,1:NG))
	WRITE(NOT,206) SC(6,1:NG)
	WRITE(NOT,214) SC(7,1:NG)
	WRITE(NOT,215) SC(8,1:NG)
	ENDDO
	WRITE(NOT,207) PROP(1,1:NG)
	WRITE(NOT,208) PROP(2,1:NG)
	WRITE(NOT,209) PROP(3,1:NG)
	WRITE(NOT,210) PROP(4,1:NG)
	WRITE(NOT,211) PROP(5,1:NG)
	WRITE(NOT,212) PROP(6,1:NG)
	WRITE(NOT,213) PROP(7,1:NG)
	ENDSELECT

100	FORMAT(//10X,'OUTPUT OF SECTION PART. . . .IPRT=',I5/,
	1	     10X,'WITH NUMBER OF STATION POINT. .NG=',I5/)
200	FORMAT(//10X,'OUTPUT OF SECTION PART. . . .IPRT=',I5/,
	1	     10X,'WITH NUMBER OF STATION POINT. .NG=',I5/,
     1		 10X,'NUMBER OF FIBER. . . . . . . NPIB=',I6/)
	
101	FORMAT( 10X,'AREA. . . . . . .A=',10E15.6/)
102	FORMAT( 10X,'OFFSET S. . . . .S=',10E15.6/)
103	FORMAT( 10X,'OFFSET T. . . . .T=',10E15.6/)
104	FORMAT( 10X,'MOMENT OF AREA. Qs=',10E15.6/)
105	FORMAT( 10X,'MOMENT OF AREA. Qt=',10E15.6/)
106	FORMAT( 10X,'MOMENT OF INER. Is=',10E15.6/)
107	FORMAT( 10X,'MOMENT OF INER. It=',10E15.6/)
108	FORMAT( 10X,'MOMENT OF INER.Ist=',10E15.6/)
109	FORMAT( 10X,'MOMENT OF INER.  J=',10E15.6/)
110	FORMAT( 10X,'MOMENT OF INER. Iw=',10E15.6/)
111	FORMAT( 10X,'MAT No. . . . .  K=',10I15/)
112	FORMAT( 10X,'CONC(0)--STEL(1) M=',10I15/)

201	FORMAT(/10X,'AREA. . . . . . .A=',10E15.6/)
202	FORMAT( 10X,'COOR S. . . . . .S=',10E15.6/)
203	FORMAT( 10X,'COOR T. . . . . .T=',10E15.6/)
204	FORMAT( 10X,'MAT No. . . . .  K=',10I15/)
205	FORMAT( 10X,'CONC(0)--STEL(1) M=',10I15)
206	FORMAT( 10X,'SHRK PATRN. . . SR=',10E15.6/)
207	FORMAT(/10X,'PART AREA. . . ..A=',10E15.6/)
208	FORMAT( 10X,'PART QS. . . . .QS=',10E15.6/)
209	FORMAT( 10X,'PART QT. . . . .QT=',10E15.6/)
210	FORMAT( 10X,'PART IS. . . . .IS=',10E15.6/)
211	FORMAT( 10X,'PART IT. . . . .IT=',10E15.6/)
212	FORMAT( 10X,'PART IST. . . .IST=',10E15.6/)
213	FORMAT( 10X,'PART Po. . . . .Po=',10E15.6/)

214	FORMAT( 10X,'WARP W. . . . . .W=',10E15.6/)
215	FORMAT( 10X,'TORC T. . . . . .T=',10E15.6/)




	RETURN
	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
      SUBROUTINE FMREADY(SC,MX,NG)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)
	DIMENSION SC(MX,NG),PP(2,14),FS(4)

	DIMENSION GPL(NG)

	DO IG = 1,NG
	IF(IG.EQ.1 ) GPL(IG) = -1.0D0
	IF(IG.EQ.NG) GPL(IG) =  1.0D0 
	IF(IG.NE.1.AND.IG.NE.NG) GPL(IG) =  GAUSP(IG-1,NG-2)
	ENDDO

	PP = 0.0D0

	CALL FREBUF
	CALL FREECH     
	CALL FREREL('A',PP(1,1 ),2) !A
	CALL FREREL('B',PP(1,2 ),2) !OFFSET SC
	CALL FREREL('C',PP(1,3 ),2) !OFFSET TC
	CALL FREREL('D',PP(1,4 ),2) !QS
	CALL FREREL('E',PP(1,5 ),2) !QT
	CALL FREREL('F',PP(1,6 ),2) !IS
	CALL FREREL('G',PP(1,7 ),2) !IT
	CALL FREREL('H',PP(1,8 ),2) !IST
	CALL FREREL('I',PP(1,9 ),2) !J
	CALL FREREL('J',PP(1,10),2) !IW
	CALL FREREL('S',PP(1,13),2) !SHEAR AREA S
	CALL FREREL('T',PP(1,14),2) !SHEAR AREA T
	CALL FREREL('K',PK,1)       !MATERIAL FLAG
	CALL FREREL('M',PM,1)       !CONC or STEEL

	DO 1010 IGG = 1,NG

	GI = GPL(IGG)  !GAUSP(IGG,NG)
	H1 = 0.5*(1.0-GI) 
	H2 = 0.5*(1.0+GI)

	DO J = 1,10
	SC(J,IGG) = H1*PP(1,J) + H2*PP(2,J)
	ENDDO

	SC(11,IGG) = PK
	SC(12,IGG) = PM

	DO J = 13,14
	SC(J,IGG) = H1*PP(1,J) + H2*PP(2,J)
	SC(J,IGG) = SC(J,IGG)/SC(1,IGG)     !SHEAR COEF CALCULATE BY DIVIDE BY TOTAL AREA
	ENDDO

1010	CONTINUE


	RETURN
	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
      SUBROUTINE FMFIBER1(SC,FW,MX,MAXP,NG,NFIB,NTOUR,MPRT)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

      COMMON /CONSTINT/ MTOTI(10),NCONI(5000),ICONDT(1)
      COMMON /CONSTREL/ MTOTR(10),NCONR(5000),RCONDT(1)

	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)

	DIMENSION MONST(1000)
	DIMENSION H(8),P(2,8),TS(2,8),XX(2),XJ(2,2)

	DIMENSION SC(MX*MAXP,NG),FW(1)
	DIMENSION P1(10),P2(10),FS(4)

	DIMENSION GPL(NG),DIMS(2,NG)

C	DIMENSION SHRK(100,2)
	ALLOCATABLE SQ(:)

	ALLOCATABLE SSS(:,:),TTT(:,:)
	ALLOCATABLE MMNN(:,:),MTSET(:),MTTYP(:),LCNT(:,:)
	ALLOCATABLE GSTS(:,:),WARP(:)
	ALLOCATABLE WARPG(:),TORCG(:),LPRT(:)

C	CONSTRUCT THE GAUSS POINT ALONG THE ELEMENT
	DO IG = 1,NG
	IF(IG.EQ.1 ) GPL(IG) = -1.0D0
	IF(IG.EQ.NG) GPL(IG) =  1.0D0 
	IF(IG.NE.1.AND.IG.NE.NG) GPL(IG) =  GAUSP(IG-1,NG-2)
	ENDDO


C	DATIN FILE  ITO
	CALL INTFILL('%IOL',ITI,1,1,0)  !UNIT 1 FILE

	CALL FREBUF
	CALL FREECH     
	CALL FREINT('T',NTOUR,1) !NUM CONC CONTOUR POINT
	CALL FREINT('C',NSEGT,1) !NUM CONC SEG
	CALL FREINT('S',NSL  ,1) !NUM BAR  SEG
	CALL FREINT('F',KONST,1) !NUM CONSTRAINT
	CALL FREREL('P',SRTIO,1) !STEEL RATIO
	CALL FREREL('R',SRMAT,1) !STEEL RATIO MAT
	FS(1:4) = 0.0D0
	CALL FREREL('O',FS(4),4) !OFFSET S1 T1 S2 T2

	CALL FREINT('H',ISKP,1) !SHRINKAGE PATTERN TYPE

C	---------------------------------------------------
	ALLOCATE (SSS(2,NTOUR),TTT(2,NTOUR))
	ALLOCATE (MMNN(2,NSEGT),MTSET(NSEGT),MTTYP(NSEGT),LCNT(8,NSEGT))
	ALLOCATE (LPRT(NSEGT))


	NFIB = 0
	NCTR = 0
	IT1 = 0
	IT2 = 0
	ISG = 0
	DO IPRT = 1,MPRT

	CALL FREBUF
	CALL FREECH     
	CALL FREINT('T',NTOURI,1) !NUM CONC CONTOUR POINT
	CALL FREINT('C',NSEGTI,1) !NUM CONC SEG


	IF(IPRT.EQ.1) NTOUR1 = NTOURI
	IF(IPRT.EQ.1) NSEGT1 = NSEGTI

	READ(ITI,*) 
	DO ITOUR = 1,NTOURI
	IT1 = IT1 + 1
	READ(ITI,*) ITOR,SSS(1,IT1),TTT(1,IT1)		!SECTION I
	ENDDO
	DO ITOUR = 1,NTOURI
	IT2 = IT2 + 1
	READ(ITI,*) ITOR,SSS(2,IT2),TTT(2,IT2)		!SECTION J
	ENDDO


	READ(ITI,*) 
	DO ISEGT = 1,NSEGTI
	ISG = ISG + 1
C	ISEGT, MM,NN,MTSET,N1,N2,N3,N4,N5,N6,N7,N8
	READ(ITI,*) ISEG,MMNN(1:2,ISG),MTSET(ISG),MTTYP(ISG),
	1										  LCNT(1:8,ISG)
	LCNT(1:8,ISG) = LCNT(1:8,ISG) + NCTR
	LPRT(ISG) = IPRT
	NFIB = NFIB + MMNN(1,ISG)*MMNN(2,ISG)
	ENDDO

	NCTR = NCTR + NTOURI
	ENDDO


	IF(KONST.GT.0) THEN

		READ(ITI,*)
		K = 0
		DO I = 1,KONST
			K = K + 1
			READ(ITI,*) NCG
			MONST(K) = NCG

			READ(ITI,*) MONST(K+1:K+NCG)
			K = K + NCG
		ENDDO

	ENDIF


	ALLOCATE (GSTS(2,NTOUR),WARP(NTOUR))
	ALLOCATE (WARPG(NFIB),TORCG(NFIB))
	WARP  = 0.0D0
	WARPG = 0.0D0
	TORCG = 0.0D0

	DO 100 IG = 1,NG


	GI = GPL(IG)  !GAUSP(IGG,NG)
	H1 = 0.5*(1.0-GI) 
	H2 = 0.5*(1.0+GI)
      
	DO ITOUR = 1,NTOUR
	GSTS(1,ITOUR) = H1*TTT(1,ITOUR) + H2*TTT(2,ITOUR) !T
	GSTS(2,ITOUR) = H1*SSS(1,ITOUR) + H2*SSS(2,ITOUR) !S
	    IF(ITOUR.EQ.1) THEN
            TOPM = GSTS(2,1) ; BOTM = GSTS(2,1)
	    ELSE
	      IF(GSTS(2,ITOUR).GT.TOPM) TOPM = GSTS(2,ITOUR)
	      IF(GSTS(2,ITOUR).LT.BOTM) BOTM = GSTS(2,ITOUR)
	    ENDIF
	ENDDO
	DIMS(1:2,IG) = [TOPM,BOTM]

	CALL WARPCAL(NTOUR1,NSEGT1,GSTS,LCNT,MMNN,MONST,KONST,
	1			 FKT,FKS,FKST,WARP,WARPG,TORCG,IGIS)

	FACS = 0.0
	FACT = 0.0
	IF(FKS.NE.0.0D0) FACS = 1.0/FKS 
	IF(FKT.NE.0.0D0) FACT = 1.0/FKT


	DO ITOUR = 1,NTOUR
	FW(ITOUR+0*NTOUR+3*NTOUR*(IG-1)) = GSTS(2,ITOUR) !S
	FW(ITOUR+1*NTOUR+3*NTOUR*(IG-1)) = GSTS(1,ITOUR)	!T
	FW(ITOUR+2*NTOUR+3*NTOUR*(IG-1)) = WARP(ITOUR)
	ENDDO

	KFIB = 0
	NFIB = 0
	DO 50 ISEGT = 1,NSEGT

	DO I = 1,8
	NODI = LCNT(I,ISEGT)			!CONNECTIVITY
	TS(1,I) = GSTS(1,NODI)    !T
	TS(2,I) = GSTS(2,NODI)    !S
	ENDDO

	MM = MMNN(1,ISEGT)
	NN = MMNN(2,ISEGT)
C	--------------------
	DO IGR = 1,MM
	RI = GAUSP(IGR,MM)
	DO IGS = 1,NN
	SI = GAUSP(IGS,NN)
	WW = GAUSW(IGR,MM)*GAUSW(IGS,NN)

      CALL WRP2D(RI,SI,H,P)
	XJ = MATMUL(P,TRANSPOSE(TS))
      DET = XJ(1,1)*XJ(2,2) - XJ(1,2)*XJ(2,1) 

	DA = WW*DET
	XX = MATMUL(TS,H)
	
	KFIB = KFIB + 1

	NFIB = NFIB + 1
	SC(1+15*(NFIB-1),IG) = DA					!AREA
	SC(2+15*(NFIB-1),IG) = XX(2)				!S
	SC(3+15*(NFIB-1),IG) = XX(1)				!T
	SC(4+15*(NFIB-1),IG) = FLOAT(MTSET(ISEGT))	!MAT No.
	SC(5+15*(NFIB-1),IG) = FLOAT(MTTYP(ISEGT))	!CONC 0  STEL 1
	SC(7+15*(NFIB-1),IG) = WARPG(KFIB)          !WARPING COEF
	SC(8+15*(NFIB-1),IG) = TORCG(KFIB)          !TORSION CORRECTION COEF
	SC(9+15*(NFIB-1),IG) = FLOAT(LPRT(ISEGT))   !PART NUMBER

	SC(10+15*(NFIB-1),IG) = FACS   !SHEAR COEF S
	SC(11+15*(NFIB-1),IG) = FACT   !SHEAR COEF T

	IF(SRTIO.GT.0.0D0) THEN
	NFIB = NFIB + 1
	SC(1+15*(NFIB-1),IG) = DA*SRTIO				!AREA
	SC(2+15*(NFIB-1),IG) = XX(2)				!S
	SC(3+15*(NFIB-1),IG) = XX(1)				!T
	SC(4+15*(NFIB-1),IG) = SRMAT            	!MAT No.
	SC(5+15*(NFIB-1),IG) = 1					!CONC 0  STEL 1
	SC(7+15*(NFIB-1),IG) = 0.0D0	            !WARPING COEF
	SC(8+15*(NFIB-1),IG) = 0.0D0                !TORSION CORRECTION COEF
	SC(9+15*(NFIB-1),IG) = FLOAT(LPRT(ISEGT))   !PART NUMBER

	SC(10+15*(NFIB-1),IG) = FACS   !SHEAR COEF S
	SC(11+15*(NFIB-1),IG) = FACT   !SHEAR COEF T

	ENDIF

	ENDDO
	ENDDO
C	--------------------

50	CONTINUE


100	CONTINUE


	DEALLOCATE (SSS,TTT)
	DEALLOCATE (MMNN,MTSET,MTTYP,LCNT)
	DEALLOCATE (GSTS,WARP)
	DEALLOCATE (WARPG,TORCG,LPRT)
C	---------------------------------------------------
C	---------------------------------------------------
	DO IS = 1,NSL
	READ(ITI,*) II,NR,NS,PK,P1(1:6)   ! 1st SECTION  S1 T1 S2 T2 SPEC DD
	READ(ITI,*)             P2(1:6)   ! 2nd SECTION  S1 T1 S2 T2 SPEC DD

	ALLOCATE(SQ(3*NR*NS*NG))

	CALL QUADGEN(2,NG,NR,NS,P1,P2,SQ,NF,FS)

	DO JF = 1,NF
	NFIB = NFIB + 1
	DO IG = 1,NG
	SC(1+15*(NFIB-1),IG) = SQ(1+3*(JF-1)+3*NF*(IG-1))        !AREA
	SC(2+15*(NFIB-1),IG) = SQ(2+3*(JF-1)+3*NF*(IG-1))		 !S
	SC(3+15*(NFIB-1),IG) = SQ(3+3*(JF-1)+3*NF*(IG-1))		 !T
	SC(4+15*(NFIB-1),IG) = PK                                !MAT No.
	SC(5+15*(NFIB-1),IG) = 1.0                               !STEL
	SC(7+15*(NFIB-1),IG) = 0.0                               !WARPING COEF
	SC(8+15*(NFIB-1),IG) = 0.0                               !TORSION CORRECTION COEF
	SC(9+15*(NFIB-1),IG) = 1                                 !PART NUMBER DEFAULT TO 1 !!!

	SC(10+15*(NFIB-1),IG) = 0.0D0   !SHEAR COEF S
	SC(11+15*(NFIB-1),IG) = 0.0D0   !SHEAR COEF T

	ENDDO
	ENDDO

	DEALLOCATE(SQ)
	
	ENDDO
C	---------------------------------------------------


C	------------------------------------
C	INTERPOLATE TO ALL FIBER
	DO IC = 1,NFIB
	DO IG = 1,NG
	
	TOPM = DIMS(1,IG) ; BOTM = DIMS(2,IG)
	HEIG = ABS(TOPM-BOTM)
	
	SS = SC(2+15*(IC-1),IG) !S

	MF = INT(SC(5+15*(IC-1),IG))

	XXS = SS - BOTM
	FSRK = 0.0D0
	IF(MF.EQ.0) THEN
	  CALL VALTEMPPAT(ISKP,HEIG,XXS,FSRK,'SKPT') !GET SHRINKAGE PATTERN HERE
	ENDIF
	SC(6+15*(IC-1),IG) = FSRK
	
	ENDDO
	ENDDO
C	------------------------------------


	RETURN
	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

      SUBROUTINE FMFIBER2(SC,SP,MX,MAXP,NG,NFIB,IPRT,NPIB)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

	DIMENSION SC(MX*MAXP,NG),SP(MX,NG)




C	---------------------
	NPIB = 0
	DO IFIB = 1,NFIB

	
C	---------------------
	DO IG = 1,NG
	LPRT = INT(SC(9+15*(IFIB-1),IG))
C	---------
	IF(LPRT.EQ.IPRT) THEN
	IF(IG.EQ.1) NPIB = NPIB + 1
	DO J  = 1,15
	SP(J+15*(NPIB-1),IG) = SC(J+15*(IFIB-1),IG)
	ENDDO
	ENDIF
C	---------
	ENDDO
C	---------------------


	ENDDO
C	---------------------

	RETURN
	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
	SUBROUTINE QUADGEN(IND,NG,NR,NS,P1,P2,SC,NFIB,FS)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)


	DIMENSION P1(2,1),P2(2,1),PP(2,4),SC(3*NR*NS,NG)
	DIMENSION H(4),P(2,4),VR(2),VS(2),XJ(2,2)
	DIMENSION FS(2,2),OF(2)

	DIMENSION GPL(NG)

	DO IG = 1,NG
	IF(IG.EQ.1 ) GPL(IG) = -1.0D0
	IF(IG.EQ.NG) GPL(IG) =  1.0D0 
	IF(IG.NE.1.AND.IG.NE.NG) GPL(IG) =  GAUSP(IG-1,NG-2)
	ENDDO

	SELECTCASE(IND)

	CASE(1)
C	====================================
C	CONCRETE 
	
	DO 1010 IGG = 1,NG

	GI = GPL(IGG)  !GAUSP(IGG,NG)
	H1 = 0.5*(1.0-GI) 
	H2 = 0.5*(1.0+GI)
	DO I = 1,2
	DO J = 1,4
	PP(I,J) = H1*P1(I,J) + H2*P2(I,J)
	ENDDO
	OF(I)= H1*FS(I,1) + H2*FS(I,2)
	ENDDO


	IPT  = 0
	DO IGR = 1,NR
	RI = GAUSP(IGR,NR)
	DO IGS = 1,NS
	SI = GAUSP(IGS,NS)
	WW = GAUSW(IGR,NR)*GAUSW(IGS,NS)


      CALL SHAP2D4(RI,SI,H,P)
	XJ = MATMUL(P,TRANSPOSE(PP))
      DET = XJ(1,1)*XJ(2,2) - XJ(1,2)*XJ(2,1) 
	DET = -1.0D0*DET  !FLIP BECAUSE S NOW BEFORE T

	DA = WW*DET
			
	SS = 0.0D0 
	TT = 0.0D0
	DO I = 1,4
	SS = SS + PP(1,I)*H(I)
	TT = TT + PP(2,I)*H(I)
	ENDDO

	IF(DA.GT.0.0D0) THEN
	IPT = IPT + 1
	NLOC = 1 + 3*(IPT-1)
	SC(NLOC+0,IGG) = DA
	SC(NLOC+1,IGG) = SS+OF(1)
	SC(NLOC+2,IGG) = TT+OF(2)
	ENDIF

	ENDDO
	ENDDO

1010	CONTINUE
C	====================================
C	====================================
	CASE(2)
C	STEEL
	DO 1020 IGG = 1,NG

	NL = NR
	NS = NS

	GI = GPL(IGG)  !GAUSP(IGG,NG)
	H1 = 0.5*(1.0-GI) 
	H2 = 0.5*(1.0+GI)
	DO I = 1,2
	DO J = 1,3
	PP(I,J) = H1*P1(I,J) + H2*P2(I,J)
	ENDDO
	OF(I)= H1*FS(I,1) + H2*FS(I,2)
	ENDDO

	S1 = PP(1,1)
	T1 = PP(2,1)
	S2 = PP(1,2)
	T2 = PP(2,2)
	SP = PP(1,3)
	DD = PP(2,3)

	SLEN = SQRT( (S2-S1)*(S2-S1) + (T2-T1)*(T2-T1) )
	IF(SLEN.EQ.0.0D0) NL = 1
	IF(SP  .EQ.0.0D0) NS = 1

	VR(1) = 1.0D0
	VR(2) = 0.0D0
	IF(SLEN.NE.0.0D0) THEN
	VR(1) = (T2-T1)/SLEN
	VR(2) = (S2-S1)/SLEN
	ENDIF
	VS(1) = -VR(2)
	VS(2) =  VR(1)

	IPT = 0
C	------------------------------
	IF(NL.GT.1) THEN
	DO IGR = 1,NL
	RI = SLEN/(NL-1)

C	---------------------
	IF(NS.GT.1) THEN
	DO IGS = 1,NS
	SI = SP/(NS-1) 



	RLR = RI*(IGR-1)
	SLS = SI*(IGS-1) - 0.5*SP
	SS = RLR*VR(2) + SLS*VS(2) + S1
	TT = RLR*VR(1) + SLS*VS(1) + T1

	DA = 0.25*3.14159265*DD*DD

	IF(DA.GT.0.0D0) THEN
	IPT = IPT + 1
	NLOC = 1 + 3*(IPT-1)
	SC(NLOC+0,IGG) = DA
	SC(NLOC+1,IGG) = SS+OF(1)
	SC(NLOC+2,IGG) = TT+OF(2)
	ENDIF

	ENDDO
	ENDIF
C	---------------------
	IF(NS.LE.1) THEN
	RLR = RI*(IGR-1)
	SLS = 0.0D0
	SS = RLR*VR(2) + SLS*VS(2) + S1
	TT = RLR*VR(1) + SLS*VS(1) + T1

	DA = 0.25*3.14159265*DD*DD

	IF(DA.GT.0.0D0) THEN
	IPT = IPT + 1
	NLOC = 1 + 3*(IPT-1)
	SC(NLOC+0,IGG) = DA
	SC(NLOC+1,IGG) = SS+OF(1)
	SC(NLOC+2,IGG) = TT+OF(2)
	ENDIF

	ENDIF
C	---------------------
	ENDDO
	ENDIF
C	------------------------------

	IF(NL.LE.1) THEN
	DA = 0.25*3.14159265*DD*DD
	SS = S1
	TT = T1

	IF(DA.GT.0.0D0) THEN
	IPT = IPT + 1
	NLOC = 1 + 3*(IPT-1)
	SC(NLOC+0,IGG) = DA
	SC(NLOC+1,IGG) = SS+OF(1)
	SC(NLOC+2,IGG) = TT+OF(2)
	ENDIF

	ENDIF

1020	CONTINUE
C	====================================

	ENDSELECT

	NFIB = IPT

	RETURN 

	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================	

	SUBROUTINE PARTSEC(SC,NF,NPRT,IPRT,PRHO)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

	DIMENSION PP(2,2),SC(10,1),NPRT(3,1),CG(2),PRHO(2,1)

	M  = 0
	LT = -1
	CALL FREBUF    
	CALL FREECH     
	CALL FREINT('I',IPRT,1) 
	CALL FREINT('M',M   ,1)       !MATERIAL No. 
	CALL FREINT('T',LT  ,1)       !MATERIAL TYPE 
	CALL FREREL('P',PRHO(1,IPRT),1)       !STEEL RATIO
	CALL FREREL('S',PRHO(2,IPRT),1)       !STEEL MAT No.
	L = 0
	CALL FREINT('E',L   ,1)       !Must Exist Flag  
	PP = 0.0D0
	CALL FREREL('L',PP(1,1),2)    !Lower Bound 
	CALL FREREL('U',PP(1,2),2)    !Upper Bound  
	RA = -1.0D0
	CALL FREREL('C',CG,2)  !CENTER
	CALL FREREL('R',RA,1)  !RADIUS


	IND = 0
	IF(RA.NE.-1.0D0) IND = 1

	IF(IND.EQ.0) THEN
	S1 = PP(1,1)
	T1 = PP(2,1)
	S2 = PP(1,2)
	T2 = PP(2,2)

	IFIND = 0
	DO 100 IFB = 1,NF
	IF(NPRT(1,IFB).NE.0.AND.L.EQ.0) GOTO 100
	S = SC(2,IFB)
	T = SC(3,IFB)
	IFN = 0
	IF(S.GE.S1.AND.T.GE.T1.AND.S.LE.S2.AND.T.LE.T2) IFN = 1
	IF(S.GE.S1.AND.T.LE.T1.AND.S.LE.S2.AND.T.GE.T2) IFN = 1
	IF(S.LE.S1.AND.T.LE.T1.AND.S.GE.S2.AND.T.GE.T2) IFN = 1
	IF(S.LE.S1.AND.T.GE.T1.AND.S.GE.S2.AND.T.LE.T2) IFN = 1
	IF(IFN.EQ.1) THEN
	IFIND = IFIND + 1
	NPRT(1,IFB) = IPRT
	NPRT(2,IFB) = M
	NPRT(3,IFB) = LT
	ENDIF

100	CONTINUE
	ENDIF

	IF(IND.EQ.1) THEN

	IFIND = 0
	DO 200 IFB = 1,NF
	IF(NPRT(1,IFB).NE.0.AND.L.EQ.0) GOTO 200
	S = SC(2,IFB)
	T = SC(3,IFB)
	DS = CG(1)-S
	DT = CG(2)-T
	DR = SQRT(DS*DS+DT*DT)  !RADIUS

	IFN = 0
	IF(DR.LE.RA) IFN = 1
	IF(IFN.EQ.1) THEN
	IFIND = IFIND + 1
	NPRT(1,IFB) = IPRT
	NPRT(2,IFB) = M
	NPRT(3,IFB) = LT
	ENDIF

200	CONTINUE
	ENDIF



	RETURN 

	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
	SUBROUTINE INTERPOC(XX,VV,DAT,NUMT,IT,NUMX)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	=============================================================
C	PRODUCED BY SONGSAK JUN2007
C	LINEAR INTERPOLATION OF DATA
C	=============================================================
	DIMENSION DAT(NUMX,2)

	KK = 4
	IF(KK.GT.NUMT) KK = NUMT

	NP = NUMT/KK       !NUM 1ST PICK
	IF(NP.GT.NUMT) NP = NUMT
	I1 = 1
	I2 = NP

	DO I = 1,NUMT
	
	IF(I2.GT.NUMT) THEN
	I2 = NUMT
	I1 = I2 - NP + 1
	GOTO 5
	ENDIF

	TT1 = DAT(I1,1)
	TT2 = DAT(I2,1)

	IF(XX.GE.TT1.AND.XX.LE.TT2) GOTO 5

	I1 = I2
	I2 = I2 + NP

	ENDDO

	I1 = 1
	I2 = NUMT

5	CONTINUE

	DO I = I1,I2
	TT1 = DAT(I  ,1)
	TT2 = DAT(I+1,1)

	IF(XX.GE.TT1.AND.XX.LE.TT2) THEN
	IT = I
	GOTO 10
	ENDIF 
	ENDDO

	VV = 0.0D0
	GOTO 20

10	CONTINUE


	DT = XX -TT1
	TT = TT2-TT1
	H1 = 1.0 - DT/TT
	H2 = DT/TT

	VV = DAT(IT,2)*H1 + DAT(IT+1,2)*H2


20	CONTINUE


	RETURN
	END

C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

C	TRUSS SECTION
      SUBROUTINE TSECTION  
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

C	FILE FOR PRINTING  NOT=ISO
	CALL INTFILL('%IOL',NOT,1,3,0)

	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',NSEC,1)

	IF(NSEC.LE.0) RETURN

	CALL DEFNREL('$TSC',LTMS,10,NSEC)               !SECTION DATA (MAX VALUE)

	DO ISEC = 1,NSEC
	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',N,1)  !NO.
      CALL FREREL('A',A,1)  !AREA
      CALL FREINT('M',M,1)  !MAT No.
      CALL FREINT('T',L,1)  !MAT TYPE 0=STEEL 1=PRESTRESS 2=CABLE
	FM = FLOAT(M)
	FL = FLOAT(L)
	CALL RELFILL('$TSC',A ,1,N,1)
	CALL RELFILL('$TSC',FM,2,N,1)
	CALL RELFILL('$TSC',FL,3,N,1)
	ENDDO


	RETURN
	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

C	PCABLE SECTION
      SUBROUTINE PSECTION  
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

C	FILE FOR PRINTING  NOT=ISO
	CALL INTFILL('%IOL',NOT,1,3,0)

	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',NSEC,1)

	IF(NSEC.LE.0) RETURN

	CALL DEFNREL('$CSP',LCSP,10,NSEC)               !SECTION DATA (MAX VALUE)

	DO ISEC = 1,NSEC
	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',N,1)  !NO.
      CALL FREREL('A',A,1)  !AREA
      CALL FREINT('M',M,1)  !MAT No.
      CALL FREINT('T',L,1)  !MAT TYPE 0=STEEL 1=PRESTRESS 2=CABLE
	FM = FLOAT(M)
	FL = FLOAT(L)
	CALL RELFILL('$CSP',A ,1,N,1)
	CALL RELFILL('$CSP',FM,2,N,1)
	CALL RELFILL('$CSP',FL,3,N,1)
	ENDDO


	RETURN
	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

C	CCABLE SECTION
      SUBROUTINE CSECTION  
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

C	FILE FOR PRINTING  NOT=ISO
	CALL INTFILL('%IOL',NOT,1,3,0)

	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',NSEC,1)

	IF(NSEC.LE.0) RETURN

	CALL DEFNREL('$CSC',LCSC,10,NSEC)               !SECTION DATA (MAX VALUE)

	DO ISEC = 1,NSEC
	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',N,1)  !NO.
      CALL FREREL('A',A,1)  !AREA
      CALL FREINT('M',M,1)  !MAT No.
      CALL FREINT('T',L,1)  !MAT TYPE 0=STEEL 1=PRESTRESS 2=CABLE
	FM = FLOAT(M)
	FL = FLOAT(L)
	CALL RELFILL('$CSC',A ,1,N,1)
	CALL RELFILL('$CSC',FM,2,N,1)
	CALL RELFILL('$CSC',FL,3,N,1)
	ENDDO


	RETURN
	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================


C	SHELL SECTION
      SUBROUTINE SSECTION  
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

C	FILE FOR PRINTING  NOT=ISO
	CALL INTFILL('%IOL',NOT,1,3,0)

	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',NSEC,1)

	IF(NSEC.LE.0) RETURN

	CALL DEFNREL('$SSC',LSSS,10,NSEC)               !SECTION DATA (MAX VALUE)

	DO ISEC = 1,NSEC
	CALL FREBUF
C	CALL FREECH
      CALL FREINT('N',N ,1)  !NO.
      CALL FREREL('T',T ,1)  !THICKNESS
      CALL FREINT('M',M ,1)  !MAT No.
      CALL FREINT('L',L ,1)  !MAT TYPE 0=CONCRETE 1=STEEL
      CALL FREINT('E',NL,1)  !NUMBER OF LAYER
      CALL FREREL('S',S ,1)  !STEEL RATIO
      CALL FREINT('V',MS,1)  !MAT No. FOR STEEL
	CALL FREBUF
	CALL FREECH
      CALL FREREL('S',SP,1)  !SHRINKAGE PATTERN NO.
      CALL FREREL('T',TP,1)  !TEMP. PATTERN NO.
	RO = 0.0D0
      CALL FREREL('R',RO,1)  !ROTATION OF LOCAL AXIS WITH NORMAL
	LG = 0
      CALL FREINT('G',LG,1)  !LOCAL AXIS OPTION   0 = GLOBAL   1 = LOCAL
	FM = FLOAT(M )
	FL = FLOAT(L )
	FN = FLOAT(NL)
	FS = FLOAT(MS)
	FLG= FLOAT(LG)
	CALL RELFILL('$SSC',T ,1,N,1)
	CALL RELFILL('$SSC',FM,2,N,1)
	CALL RELFILL('$SSC',FL,3,N,1)
	CALL RELFILL('$SSC',FN,4,N,1)
	CALL RELFILL('$SSC',S ,5,N,1)
	CALL RELFILL('$SSC',FS,6,N,1)
	CALL RELFILL('$SSC',SP,7,N,1)
	CALL RELFILL('$SSC',TP,8,N,1)
	CALL RELFILL('$SSC',RO,9,N,1)
	CALL RELFILL('$SSC',FLG,10,N,1)
	ENDDO


	RETURN
	END




C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== PRAMIN OCT 2010 =============
C	=======================================================================
C	SOLID SECTION
      SUBROUTINE SOSECTION  
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

C	FILE FOR PRINTING  NOT=ISO
	CALL INTFILL('%IOL',NOT,1,3,0)
C     ----------------------------------------------------
	CALL FREBUF
	CALL FREECH
      CALL FREINT('N',NSEC,1)
C     ----------------------------------------------------

	IF(NSEC.LE.0) RETURN
C     DEFINE STORAGE - $SOC 
	CALL DEFNREL('$SOC',LSOS,10,NSEC)               !SECTION DATA (MAX VALUE)
C     ----------------------------------------------------
	DO ISEC = 1,NSEC
	
	CALL FREBUF
C	CALL FREECH
      CALL FREINT('N',N ,1)  !NO.      
      CALL FREINT('M',M ,1)  !MAT No.
      CALL FREINT('L',L ,1)  !MAT TYPE 0=CONCRETE 1=STEEL     
      CALL FREREL('S',S ,1)  !STEEL RATIO
      CALL FREINT('V',MS,1)  !MAT No. FOR STEEL
      
	CALL FREBUF
	CALL FREECH
      CALL FREREL('S',SP,1)  !SHRINKAGE PATTERN NO.
      CALL FREREL('T',TP,1)  !TEMP. PATTERN NO.
      RO = 0.0D0
      CALL FREREL('R',RO,1)  !ROTATION OF LOCAL AXIS WITH NORMAL
	LG = 0
      CALL FREINT('G',LG,1)  !LOCAL AXIS OPTION   0 = GLOBAL   1 = LOCAL
	
	FM = FLOAT(M )   
	FL = FLOAT(L ) 	
	FS = FLOAT(MS)   !MAT No. FOR STEEL	
	FLG= FLOAT(LG)
	CALL RELFILL('$SOC',FM,1,N,1)  !MAT No.
	CALL RELFILL('$SOC',FL,2,N,1)  !MAT TYPE 0=CONCRETE 1=STEEL	
	CALL RELFILL('$SOC',S ,3,N,1)  !STEEL RATIO
	CALL RELFILL('$SOC',FS,4,N,1)  !MAT No. FOR STEEL
	CALL RELFILL('$SOC',SP,5,N,1)  !SHRINKAGE PATTERN NO.
	CALL RELFILL('$SOC',TP,6,N,1)  !TEMP. PATTERN NO.
	CALL RELFILL('$SOC',RO,9,N,1)  !ROTATION OF LOCAL AXIS WITH NORMAL
	CALL RELFILL('$SOC',FLG,10,N,1)!LOCAL AXIS OPTION
	
	ENDDO
C     ----------------------------------------------------
	RETURN
	END
	
C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK MAY2008 =============
C	=======================================================================

      SUBROUTINE STSWARP(SC,FW,MX,MAXP,IG,NTOUR,SS,TT,WW)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

	DIMENSION SC(MX*MAXP,1),FW(1)


C	------------------------------------
C	GET THE BIGGEST SIZE OF SECTION
	SMAX  = 0.0D0
	SMIN  = 0.0D0	
	TMAX  = 0.0D0
	TMIN  = 0.0D0
	DO ITOUR = 1,NTOUR
	CO_S = FW(ITOUR+0*NTOUR+3*NTOUR*(IG-1)) !S
	CO_T = FW(ITOUR+1*NTOUR+3*NTOUR*(IG-1)) !T
	CO_W = FW(ITOUR+2*NTOUR+3*NTOUR*(IG-1)) !W


	IF(ITOUR.EQ.1) THEN
	TMAX = CO_T
	TMIN = CO_T
	SMAX = CO_S
	SMIN = CO_S
	ENDIF

	IF(CO_T.GT.TMAX) TMAX = CO_T
	IF(CO_T.LT.TMIN) TMIN = CO_T
	IF(CO_S.GT.SMAX) SMAX = CO_S
	IF(CO_S.LT.SMIN) SMIN = CO_S

	ENDDO
	BNORM = ABS(TMAX - TMIN)
	HNORM = ABS(SMAX - SMIN)
	SIZMX = HNORM
	IF(BNORM.GT.SIZMX) SIZMX = BNORM
C	------------------------------------

C	GENERATE STRESS POINT POSITION AT GAUSS POINT ALONG THE BEAM
	WW = 0.0D0
	WP = 0.0D0
	DLEM = SIZMX
	DO ITOUR = 1,NTOUR

	CO_S = FW(ITOUR+0*NTOUR+3*NTOUR*(IG-1)) !S
	CO_T = FW(ITOUR+1*NTOUR+3*NTOUR*(IG-1)) !T
	CO_W = FW(ITOUR+2*NTOUR+3*NTOUR*(IG-1)) !W

	DLEN = (SS-CO_S)*(SS-CO_S) + (TT-CO_T)*(TT-CO_T)
	DLEN = SQRT(DLEN)

	IF(ITOUR.EQ.1) DLEM = DLEN

	IF(DLEN.LE.DLEM) THEN
	DLEM = DLEN
	WP   = CO_W
	ENDIF

	ENDDO

	IF(DLEM.LE.0.01*SIZMX) THEN
	WW = WP	!STORE WARPING FUNCTION
	ENDIF
C	------------------------------------


	RETURN
	END


C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================