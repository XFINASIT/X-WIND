      SUBROUTINE WIND_NBC1995 (IOPT_WIND,IOPT_ADD_WIND)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      COMMON /INOU/ ITI,ITO,ISO,NDATI,NPLOT,NKFAC,NELEM,
     1              IFPR(10),IFPL(10)
      ! ******* MISSING SPEED-UP OVER HILL AND ESCARPMENT PAGE 11 *****
      SELECTCASE(IOPT_WIND)
      CASE (5) ! SIMPLIFIED PROCEDURE
      READ (ITI,*) V_WIND,GUST_FAC,BUILD_HEIG,IOPT_TOPO,IOPT_HILL,IOPT_BUILD,HILL_HEIGHT,HILL_LENGTH
     1             ,CREST_BUILD,IOPT_FORCE,FORCE_COEFF,DIREC_COFF1,DIREC_COFF2
      
      VELO_PRESSSURE = 0.065923D0*(V_WIND**2D0) ! UNIT KGF/M**2
      VELO_PRESSSURE = VELO_PRESSSURE*9.806D0   ! UNIT N/M**2
      
      IF (IOPT_FORCE.EQ.0) FORCE_COEFF = 1.0D0 ! NOT CONSIDER FORCE COEFFICIENT
      CALL STORY_SIMPLIFIRED_NCB_1995 (VELO_PRESSSURE,BUILD_HEIG,FORCE_COEFF,GUST_FAC)
      
      IF (IOPT_ADD_WIND.EQ.1) CALL WIND_ADD_FORCE (ITO_ADD)
      
      CASE (6) ! DETAILED PROCEDURE
      READ (ITI,*) V_WIND,CGX,CGY,BUILD_HEIG,IOPT_EXPO,IOPT_TOPO,IOPT_HILL,IOPT_BUILD,HILL_HEIGHT,HILL_LENGTH
     1             ,CREST_BUILD,IOPT_FORCE,FORCE_COEFF,DIREC_COFF1,DIREC_COFF2
      
      VELO_PRESSSURE = 0.065923D0*(V_WIND**2D0) ! UNIT KGF/M**2
      VELO_PRESSSURE = VELO_PRESSSURE*9.806D0   ! UNIT N/M**2
      CALL STORY_DETAILED_NCB_1995 (VELO_PRESSSURE,BUILD_HEIG,FORCE_COEFF,CGX,CGY,IOPT_EXPO)   
      
      IF (IOPT_ADD_WIND.EQ.1) CALL WIND_ADD_FORCE (ITO_ADD)
      
      ENDSELECT
      END
      
C	==================================================================
      SUBROUTINE STORY_SIMPLIFIRED_NCB_1995 (VELO_PRESSSURE,BUILD_HEIG,FORCE_COEFF,GUST_FAC)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      COMMON /FLOOR/ IFLOOR,NFLOOR,NSN0
      COMMON /MGRAV/ NGRAV
      COMMON /WIND_LATERAL/ WIND_D(3,10000),WIND_CASE(500),IN_FLOOR
      DIMENSION AREA_OUT1(IFLOOR),AREA_OUT2(IFLOOR)
      DIMENSION ELEVATION(IFLOOR)
      DIMENSION FORCE1(IFLOOR),FORCE2(IFLOOR)
      
      AREA_OUT1 = 0.
      AREA_OUT2 = 0.
      FORCE1    = 0.
      FORCE2    = 0.
      
      CALL FLOOR_AREA_SPAN (AREA_OUT1,AREA_OUT2)
      CALL L_B_LENGTH (RATIO_L,RATIO_B,ELEVATION)
      
      CALL EXPSURE_FACTOR_SIMPLIFIED_NBC_1995 (BUILD_HEIG,ACE2)
      
      ACP1 = 0.8D0
      ACP2 = -0.5D0
      ACG1 = GUST_FAC ! INPUT DATA
      ACG2 = GUST_FAC ! INPUT DATA
      
      DO I = 1,IFLOOR 
      IF (I.NE.IFLOOR-1) CALL EXPSURE_FACTOR_SIMPLIFIED_NBC_1995 (ELEVATION(I),ACE1)
      IF (I.EQ.IFLOOR-1) CALL EXPSURE_FACTOR_SIMPLIFIED_NBC_1995 (ELEVATION(IFLOOR),ACE1)
      
      PRESSURE = (VELO_PRESSSURE*ACE1*ACG1*ACP1) - (VELO_PRESSSURE*ACE2*ACG2*ACP2)
      
      FORCE1(I) = PRESSURE*AREA_OUT2(I)*DIREC_COFF1*FORCE_COEFF
      FORCE2(I) = PRESSURE*AREA_OUT1(I)*DIREC_COFF2*FORCE_COEFF
      
      ENDDO
      
      DO I = 1,IFLOOR
      SELECTCASE(NGRAV)
      CASE(1)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(2)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(3)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        WIND_D(3,IN_FLOOR) = 0.0D0
        ENDIF
      ENDSELECT
      ENDDO
      
      END
C	==================================================================
      SUBROUTINE STORY_DETAILED_NCB_1995 (VELO_PRESSSURE,BUILD_HEIG,FORCE_COEFF,CGX,CGY,IOPT_EXPO)  
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      COMMON /FLOOR/ IFLOOR,NFLOOR,NSN0
      COMMON /MGRAV/ NGRAV
      COMMON /WIND_LATERAL/ WIND_D(3,10000),WIND_CASE(500),IN_FLOOR
      DIMENSION AREA_OUT1(IFLOOR),AREA_OUT2(IFLOOR)
      DIMENSION ELEVATION(IFLOOR)
      DIMENSION FORCE1(IFLOOR),FORCE2(IFLOOR)

      AREA_OUT1 = 0.
      AREA_OUT2 = 0.
      FORCE1 = 0.
      FORCE2 = 0.
      
      CALL FLOOR_AREA_SPAN (AREA_OUT1,AREA_OUT2)
      CALL L_B_LENGTH (RATIO_L,RATIO_B,ELEVATION)
      
      ACP1 = 0.8D0
      ACP2 = -0.5D0
      CALL EXPOSURE_FACTOR_NCB_1995 (IOPT_EXPO,BUILD_HEIG,ACE2)
      
      DO I = 1,IFLOOR 
      IF (I.NE.IFLOOR-1) CALL EXPOSURE_FACTOR_NCB_1995 (IOPT_EXPO,ELEVATION(I),ACE1)
      IF (I.EQ.IFLOOR-1) CALL EXPOSURE_FACTOR_NCB_1995 (IOPT_EXPO,ELEVATION(IFLOOR),ACE1)
      PRESSURE1 = (VELO_PRESSSURE*ACE1*CGX*ACP1) - (VELO_PRESSSURE*ACE1*CGX*ACP2)
      PRESSURE2 = (VELO_PRESSSURE*ACE2*CGY*ACP1) - (VELO_PRESSSURE*ACE2*CGY*ACP2)
      
      FORCE1(I) = PRESSURE1*AREA_OUT2(I)*DIREC_COFF1*FORCE_COEFF
      FORCE2(I) = PRESSURE2*AREA_OUT1(I)*DIREC_COFF2*FORCE_COEFF
      ENDDO
      
      DO I = 1,IFLOOR
      SELECTCASE(NGRAV)
      CASE(1)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(2)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(3)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        WIND_D(3,IN_FLOOR) = 0.0D0
        ENDIF
      ENDSELECT
      ENDDO
      
      END
C	==================================================================
      SUBROUTINE EXPSURE_FACTOR_SIMPLIFIED_NBC_1995 (ELEVATION,ACE)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      DIMENSION CE_NBC_1997(20) 
      DATA CE_NBC_1997/0.9D0,1.0D0,1.1D0,1.2D0,1.3D0,1.4D0,1.5D0,1.6D0,1.8D0,2.0D0
     1                ,6D0,12D0,20D0,30D0,44D0,64D0,85D0,140D0,240D0,400D0/
      
      ! COMMENTARY B
      ACE = (ELEVATION/10D0)**(1D0/5D0)
      IF (ACE.LE.0.9D0) ACE = 0.9D0
      
      
!      ! TABLE 4.1.8.1   
!        DO 100 I = 1,13
!            IF (ELEVATION.LE.CE_NBC_1997(11))      THEN
!            ACE = 0.9D0
!            EXIT
!            ELSEIF (ELEVATION.LE.CE_NBC_1997(10+I)) THEN
!            IF(I.NE.1) DELTA_PRESSURE  = CE_NBC_1997(I)    -  CE_NBC_1997(I-1)
!            IF(I.NE.1) DELTA_ELEVATION = CE_NBC_1997(I+10) -  CE_NBC_1997(I+10-1)
!            ERR_CHECK = ELEVATION-CE_NBC_1997(I+10-1)
!             IF (ERR_CHECK.NE.0) ACE = CE_NBC_1997(I-1) + ((DELTA_PRESSURE/DELTA_ELEVATION)*(ELEVATION-CE_NBC_1997(I+10-1)))
!             IF (ERR_CHECK.EQ.0) ACE = CE_NBC_1997(I)
!            EXIT 
!            ELSEIF (ELEVATION.GT.CE_NBC_1997(20))  THEN
!            ACE = 0.0D0 ! ERROR
!            EXIT
!            ENDIF
!100     CONTINUE
      END
C	==================================================================
      SUBROUTINE EXPOSURE_FACTOR_NCB_1995 (IOPT_EXPO,ELEVATION,ACE)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      !DIMENSION ELEVATION(2)
      SELECTCASE(IOPT_EXPO)
      CASE(1) ! A
      ACE =  (ELEVATION/10D0)**(0.28D0)
      IF (ACE.LE.1.0D0) ACE = 1.0D0
      CASE(2) ! B
      ACE =  (ELEVATION/12.7D0)**(0.50D0)
      IF (ACE.LE.0.5D0) ACE = 0.5D0
      CASE(3) ! C
      ACE =  (ELEVATION/30D0)**(0.72D0)
      IF (ACE.LE.30D0) ACE = 0.4D0
      ENDSELECT
      END
C	==================================================================
      