      SUBROUTINE UBC1997 (IOPT_WIND,ITO_ADD)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      COMMON /INOU/ ITI,ITO,ISO,NDATI,NPLOT,NKFAC,NELEM,
     1              IFPR(10),IFPL(10)
      
      SELECTCASE (IOPT_WIND)
      CASE (3) ! PROJECTED AREA METHOD
      READ (ITI,*) IOPT_EXPO,V_WIND,FACTOR_IMPO,PRESSURE_COEFF,DIREC_COFF1,DIREC_COFF2
      ! MILE/HOUR > M/SEC
      V_WIND = V_WIND*2.23694D0
      CALL WIND_PRESSURE_UBC_1997 (V_WIND,AQS) ! WIND STAGNATION PRESSURE *** MILE/HOUR
      CALL STORY_DATA_UBC_1997_PROJECTED (IOPT_EXPO,PRESSURE_COEFF,AQS,FACTOR_IMPO,DIREC_COFF1,DIREC_COFF2)
      
      IF (IOPT_ADD_WIND.EQ.1) CALL WIND_ADD_FORCE (ITO_ADD)
      
      CASE (4) ! NORMAL FORCE METHOD
      READ (ITI,*) IOPT_EXPO,V_WIND,FACTOR_IMPO,AHEIGHT_MEAN,DIREC_COFF1,DIREC_COFF2
      V_WIND = V_WIND*2.23694D0
      CALL WIND_PRESSURE_UBC_1997 (V_WIND,AQS) ! WIND STAGNATION PRESSURE *** MILE/HOUR
      CALL STORY_DATA_UBC_1997_NORMAL (IOPT_EXPO,AHEIGHT_MEAN,AQS,FACTOR_IMPO,DIREC_COFF1,DIREC_COFF2)
      
      IF (IOPT_ADD_WIND.EQ.1) CALL WIND_ADD_FORCE (ITO_ADD)
      ENDSELECT

      END
C	==================================================================
      SUBROUTINE WIND_PRESSURE_UBC_1997 (V_WIND,AQS)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      DIMENSION QS_DATA(14)
      DATA QS_DATA/12.6D0,16.4D0,20.8D0,25.6D0,31.0D0,36.9D0,43.3D0
     1             ,70D0,80D0,90D0,100D0,110D0,120D0,130D0/
      
      DO 100 I = 1,7
            REAL_SPEED = QS_DATA(7+I) 
            IF (V_WIND.LE.QS_DATA(8))      THEN
            PB = 12.60D0
            EXIT
            ELSEIF (V_WIND.LE.REAL_SPEED) THEN
            IF(I.NE.1) DELTA_PRESSURE = QS_DATA(I)    -  QS_DATA(I-1)
            IF(I.NE.1) DELTA_SPEED    = QS_DATA(I+7) -  QS_DATA(I+7-1)
             IF (REAL_SPEED-V_WIND.NE.0) PB = QS_DATA(I-1) + ((DELTA_PRESSURE/DELTA_SPEED)*(REAL_SPEED-V_WIND))
             IF (REAL_SPEED-V_WIND.EQ.0) PB = QS_DATA(I)
            EXIT 
            ELSEIF (V_WIND.GT.QS_DATA(14))  THEN
            PB = 43.3D0
            EXIT
            ENDIF
100     CONTINUE
        
      AQS = PB * 0.0479D0*1000D0 ! PSF > N/M^2
      END
C	==================================================================
      SUBROUTINE STORY_DATA_UBC_1997_PROJECTED (IOPT_EXPO,PRESSURE_COEFF,AQS,FACTOR_IMPO,DIREC_COFF1,DIREC_COFF2)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      COMMON /FLOOR/ IFLOOR,NFLOOR,NSN0
      COMMON /MGRAV/ NGRAV
      COMMON /WIND_LATERAL/ WIND_D(3,10000),WIND_CASE(500),IN_FLOOR
      DIMENSION AREA_OUT1(IFLOOR),AREA_OUT2(IFLOOR)
      DIMENSION ELEVATION(IFLOOR)
      DIMENSION FORCE1(IFLOOR),FORCE2(IFLOOR)
          
      AREA_OUT1 = 0.
      AREA_OUT2 = 0.
      FORCE1 = 0.
      FORCE2 = 0.
      
      CALL FLOOR_AREA_SPAN (AREA_OUT1,AREA_OUT2)
      CALL L_B_LENGTH (RATIO_L,RATIO_B,ELEVATION)
      
      DO I = 1,IFLOOR 
      IF (I.NE.IFLOOR-1) CALL GUST_FACTOR_UBC1997 (IOPT_EXPO,ELEVATION(I),ACE)
      IF (I.EQ.IFLOOR-1) CALL GUST_FACTOR_UBC1997 (IOPT_EXPO,ELEVATION(IFLOOR),ACE)
      PRESSURE = ACE*PRESSURE_COEFF*AQS*FACTOR_IMPO
      FORCE1(I) = PRESSURE*AREA_OUT2(I)*DIREC_COFF1
      FORCE2(I) = PRESSURE*AREA_OUT1(I)*DIREC_COFF2
      ENDDO
      
      
      DO I = 1,IFLOOR
      SELECTCASE(NGRAV)
      CASE(1)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(2)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(3)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        WIND_D(3,IN_FLOOR) = 0.0D0
        ENDIF
      ENDSELECT
      ENDDO
      END
C	==================================================================
      SUBROUTINE GUST_FACTOR_UBC1997 (IOPT_EXPO,ELEVATION,AQS)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      DIMENSION EXPO_B(26),EXPO_C(26),EXPO_D(26)
      DIMENSION DATA_AQS(26)
      DATA EXPO_B /15.0D0,20.0D0,25.0D0,30.0D0,40.0D0,60.0D0,80.0D0,100.0D0,120.0D0,160.0D0
     1            ,200.0D0,300.0D0,400.0D0
     1            ,0.62D0,0.67D0,0.72D0,0.76D0,0.84D0,0.95D0,1.04D0,1.13D0,1.20D0,1.31D0
     1            ,1.42D0,1.63D0,1.80D0/
      DATA EXPO_C/15.0D0,20.0D0,25.0D0,30.0D0,40.0D0,60.0D0,80.0D0,100.0D0,120.0D0,160.0D0
     1            ,200.0D0,300.0D0,400.0D0
     1            ,1.06D0,1.13D0,1.19D0,1.23D0,1.31D0,1.43D0,1.53D0,1.61D0,1.67D0,1.79D0
     1            ,1.8D0,2.05D0,2.19D0/
      DATA EXPO_D/15.0D0,20.0D0,25.0D0,30.0D0,40.0D0,60.0D0,80.0D0,100.0D0,120.0D0,160.0D0
     1            ,200.0D0,300.0D0,400.0D0
     1            ,1.39D0,1.45D0,1.50D0,1.54D0,1.62D0,1.73D0,1.81D0,1.88D0,1.93D0,2.02D0
     1            ,2.10D0,2.23D0,2.34D0/
      
      SELECTCASE(IOPT_EXPO)
      CASE (1) ! B
      DATA_AQS(1:13)   =  EXPO_B(14:26)   
      DATA_AQS(14:26)  =  EXPO_B(1:13)*0.3048D0 ! UNIT FT>M
      CASE (2) ! C
      DATA_AQS(1:13)   =  EXPO_C(14:26)   
      DATA_AQS(14:26)  =  EXPO_C(1:13)*0.3048D0 ! UNIT FT>M
      CASE (3) ! D
      DATA_AQS(1:13)   =  EXPO_D(14:26) 
      DATA_AQS(14:26)  =  EXPO_D(1:13)*0.3048D0 ! UNIT FT>M
      ENDSELECT
      
        DO 100 I = 1,13
            IF (ELEVATION.LE.DATA_AQS(14))      THEN
            SELECTCASE (IOPT_EXPO)
            CASE (1)
            AQS = 0.62D0
            CASE (2)
            AQS = 1.06D0
            CASE (3)
            AQS = 1.39D0
            ENDSELECT
            EXIT
            ELSEIF (ELEVATION.LE.DATA_AQS(13+I)) THEN
            IF(I.NE.1) DELTA_PRESSURE  = DATA_AQS(I)    -  DATA_AQS(I-1)
            IF(I.NE.1) DELTA_ELEVATION = DATA_AQS(I+13) -  DATA_AQS(I+13-1)
            ERR_CHECK = ELEVATION-DATA_AQS(I+13-1)
             IF (ERR_CHECK.NE.0) AQS = DATA_AQS(I-1) + ((DELTA_PRESSURE/DELTA_ELEVATION)*(ELEVATION-DATA_AQS(I+13-1)))
             IF (ERR_CHECK.EQ.0) AQS = DATA_AQS(I)
            EXIT 
            ELSEIF (ELEVATION.GT.DATA_AQS(26))  THEN
            SELECTCASE (IOPT_EXPO)
            CASE (1)
            AQS = 1.80D0
            CASE (2)
            AQS = 2.19D0
            CASE (3)
            AQS = 2.34D0
            ENDSELECT
            EXIT
            ENDIF
100     CONTINUE
      END
C	==================================================================
      SUBROUTINE STORY_DATA_UBC_1997_NORMAL (IOPT_EXPO,AHEIGHT_MEAN,AQS,FACTOR_IMPO,DIREC_COFF1,DIREC_COFF2)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (i-n)
      COMMON /FLOOR/ IFLOOR,NFLOOR,NSN0
      COMMON /MGRAV/ NGRAV
      COMMON /WIND_LATERAL/ WIND_D(3,10000),WIND_CASE(500),IN_FLOOR
      DIMENSION AREA_OUT1(IFLOOR),AREA_OUT2(IFLOOR)
      DIMENSION ELEVATION(IFLOOR)
      DIMENSION FORCE1(IFLOOR),FORCE2(IFLOOR)
          
      AREA_OUT1 = 0.
      AREA_OUT2 = 0.
      FORCE1 = 0.
      FORCE2 = 0.
      CALL FLOOR_AREA_SPAN (AREA_OUT1,AREA_OUT2)
      CALL L_B_LENGTH (RATIO_L,RATIO_B,ELEVATION)
      
      ! TABLE 16-H PAGE 2-29
      ACQ1      = 0.80D0
      ACQ2      = -0.5D0
      
      CALL GUST_FACTOR_UBC1997 (IOPT_EXPO,AHEIGHT_MEAN,ACE2)
      
      DO I = 1,IFLOOR     
      IF (I.NE.IFLOOR-1) CALL GUST_FACTOR_UBC1997 (IOPT_EXPO,ELEVATION(I),ACE1)
      IF (I.EQ.IFLOOR-1) CALL GUST_FACTOR_UBC1997 (IOPT_EXPO,ELEVATION(IFLOOR),ACE1)
      PRESSURE = (ACE1*ACQ1*AQS*FACTOR_IMPO) - (ACE2*ACQ2*AQS*FACTOR_IMPO)
      
      FORCE1(I) = PRESSURE*AREA_OUT2(I)*DIREC_COFF1
      FORCE2(I) = PRESSURE*AREA_OUT1(I)*DIREC_COFF2
      ENDDO
      
      DO I = 1,IFLOOR
      SELECTCASE(NGRAV)
      CASE(1)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = 0.0D0
        WIND_D(2,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(2)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        ENDIF
      CASE(3)
        IN_FLOOR           = IN_FLOOR + 1
        IF (I.EQ.1.OR.I.EQ.IFLOOR) THEN
        WIND_D(1,IN_FLOOR) = FORCE1(I)/2D0
        WIND_D(2,IN_FLOOR) = 0.0D0
        WIND_D(3,IN_FLOOR) = FORCE2(I)/2D0
        ELSEIF (I.NE.1) THEN
        WIND_D(1,IN_FLOOR) = (FORCE1(I) + FORCE1(I-1))/2D0
        WIND_D(2,IN_FLOOR) = (FORCE2(I) + FORCE2(I-1))/2D0
        WIND_D(3,IN_FLOOR) = 0.0D0
        ENDIF
      ENDSELECT
      ENDDO
      
      END
C	==================================================================