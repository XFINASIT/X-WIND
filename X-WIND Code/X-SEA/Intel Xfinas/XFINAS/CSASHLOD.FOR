C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
      SUBROUTINE SEFWSHL(IEG,IEL,IPRT,FIXE,IAX)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	LTMOPT(1)  WORKING ON MECHANICAL DATA
C	 0 = NO UPDATE STRESS & MATERIAL STATE
C	 1 = UPDATE STRESS & MATERIAL STATE
C	 2 = STIFFNESS ONLY

	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)


	DIMENSION VR(3),VS(3),VT(3)
	DIMENSION NPM(10),NPI(10),IAX(1)
	DIMENSION FIXE(1),WW1(3)
	DIMENSION FJ(4),XJI(4) 
	DIMENSION H(8),HD(2,8)

	ALLOCATABLE IF1(:),IF3(:)
	ALLOCATABLE COORD(:,:)

C	----------------------------------------
C	GROUP DATA
C	----------------------------------------
	CALL INTFILL('%GRP',ITYPE,1 ,IEG,0) !
	CALL INTFILL('%GRP',ISTYP,2 ,IEG,0) !
	CALL INTFILL('%GRP',NELE ,3 ,IEG,0) !
	CALL INTFILL('%GRP',MPRT ,4 ,IEG,0) ! MAXP
	CALL INTFILL('%GRP',MGAS ,5 ,IEG,0) !
	CALL INTFILL('%GRP',MFIB ,6 ,IEG,0) !
	CALL INTFILL('%GRP',NEF  ,7 ,IEG,0) !
	CALL INTFILL('%GRP',NNM  ,8 ,IEG,0) !
	CALL INTFILL('%GRP',NNF  ,9 ,IEG,0) !
	CALL INTFILL('%GRP',NGR  ,10,IEG,0) !
	CALL INTFILL('%GRP',NGS  ,11,IEG,0) !
	CALL INTFILL('%GRP',NGT  ,12,IEG,0) !
C	GROUP FILE
	CALL INTFILL('%GRF',N1   ,1 ,IEG,0) !
	CALL INTFILL('%GRF',N3   ,3 ,IEG,0) !
	
	CALL INTFILL('%GRF',NDX1 ,11,IEG,0) !
	CALL INTFILL('%GRF',NDX3 ,13,IEG,0) !
C	----------------------------------------

	ALLOCATE(IF1(N1),IF3(N3))
	ALLOCATE(COORD(3,NNM))


C	CALLING GRAVITY
	DO I = 1,3
	CALL RELFILL('%GRV',WW1(I),1,I,0)
	ENDDO


	CALL INTFILL('%NUB',NSC,1,4,0)
C	--------------------------
C	EXTRACT NODAL COORDINATE
	NPM(1) = N1
	NPI(1) = N1
	CALL CALLINTG(IF1,IAX,NDX1,NPM,NPI,1,'READ')
	DO INM = 1,NNM
	NOD = IF1(INM)
	COORD(1:3,INM) = 0.0D0
	DO ISC = 1,NSC
	CALL RELFILL('$XYZ',COORD(ISC,INM),ISC,NOD,0)  !GETTING HERE NODAL COORDINATE
	ENDDO
	ENDDO
C	--------------------------


C	---------------------------------------------------------
	NPM(1) = N3
	NPI(1) = N3
	CALL CALLINTG(IF3,IAX,NDX3,NPM,NPI,1,'READ') !ELEMENT DATA

	ISEC = IF3(2)     !SECTION SET
	NPRT = IF3(6)     !NUMBER OF PART (EQUAL TO 1 FOR SHELL)
	
	CALL RELFILL('$SSC',TH  ,1,ISEC,0)           !THICKNESS
	CALL RELFILL('$SSC',FMAT,2,ISEC,0)           !MAT NO
	CALL RELFILL('$SSC',FTYP,3,ISEC,0)           !MAT TYPE  0=CONCRETE 1=STEEL
	MATN = INT(FMAT)
	MTYP = INT(FTYP)


	IF(MTYP.EQ.0) CALL RELFILL('%FNC',RHO,4,MATN,0)
	IF(MTYP.EQ.1) CALL RELFILL('%MSL',RHO,9,MATN,0)
C     ----------------------------------------------------------
C     LOOP OVER GAUSS TO DET. STIFFNESS & FORCE VECTOR
C     ----------------------------------------------------------
	NGR = 3
	NGS = 3
      DO 400 IGR = 1,NGR
      DO 400 IGS = 1,NGS
	RI = GAUSP(IGR,NGR)
	SI = GAUSP(IGS,NGS)
	WW = GAUSW(IGR,NGR)*GAUSW(IGS,NGS)


	CALL SHAP4D(RI,SI,H,HD)
	CALL SHJACB(NNM,COORD,HD,VR,VS,VT,DET,FJ,XJI)
C     ------------------------------------------------------------
	DO IGRAV = 1,3
	DWEG = RHO*TH*DET*WW*WW1(IGRAV)

	NDUM = 6-IGRAV
	DO INM = 1,NNM
	FIXE(6*INM-NDUM) = FIXE(6*INM-NDUM) + H(INM)*DWEG
	ENDDO

	ENDDO


C     ----------------------------------------------------------
400	CONTINUE
C     ----------------------------------------------------------

	DEALLOCATE(IF1,IF3)
	DEALLOCATE(COORD)


	RETURN

	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

      SUBROUTINE SHLACT(IEG,IEL)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

      COMMON /LOCA/ LID,LDS,LEL,LDC,LXY,LCH,LNU,LMP,LGP,LMS,LGS,
     1              LCO,LEX,LLM,LES,LEC,LED,LEI,LEE,LMA,LLF,LLV,
     2              LRE,LDI,LDL,LDT,LDK,LER,LEV,LTT,LWV,LAR,LBR,
     3              LVE,LDD,LRT,LBU,LBC,LVL,LAL,LEF,LDU,LPR,LLO,
	4              LRV,LRT1,LRET,LRET1,LDM,LDPT,LVL1,LMV,LXI,LCM,LCC,
	5			    LCN,LDIM,LFRE,LSFC,LLOF

      COMMON A(9000000),IA(9000000)

C	GET LOAD COMMAND   
	CALL INTFILL('GRLI',LTYP,1,3,0) !LOAD TYPE


	SELECTCASE(LTYP)

	CASE(0,1,2,3)
	CALL SHLCSL1(IEG,IEL)

	CASE(4,5,6)
	CALL SHLCSL2(IEG,IEL)

	CASE(7,8,9)
	CALL CSAELGL(IA(LEL))

	ENDSELECT


	RETURN

	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

      SUBROUTINE SHLCSL1(IEG,IEL)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	LTMOPT(1)  WORKING ON MECHANICAL DATA
C	 0 = NO UPDATE STRESS & MATERIAL STATE
C	 1 = UPDATE STRESS & MATERIAL STATE
C	 2 = STIFFNESS ONLY

	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)


	DIMENSION VR(3),VS(3),VT(3)
	DIMENSION NPM(10),NPI(10)
	DIMENSION WW1(3),FW(3)
	DIMENSION FJ(4),XJI(4) 
	DIMENSION H(8),HD(2,8)

	ALLOCATABLE IF1(:),IF2(:),IF3(:),AF6(:),AF8(:)
	ALLOCATABLE COORD(:,:),FDAT(:),FIXE(:)
	ALLOCATABLE IAX(:),AAX(:)

C	----------------------------------------
C	GROUP DATA
C	----------------------------------------
	CALL INTFILL('%GRP',ITYPE,1 ,IEG,0) !
	CALL INTFILL('%GRP',ISTYP,2 ,IEG,0) !
	CALL INTFILL('%GRP',NELE ,3 ,IEG,0) !
	CALL INTFILL('%GRP',MPRT ,4 ,IEG,0) ! MAXP
	CALL INTFILL('%GRP',MGAS ,5 ,IEG,0) !
	CALL INTFILL('%GRP',MFIB ,6 ,IEG,0) !
	CALL INTFILL('%GRP',NEF  ,7 ,IEG,0) !
	CALL INTFILL('%GRP',NNM  ,8 ,IEG,0) !
	CALL INTFILL('%GRP',NNF  ,9 ,IEG,0) !
	CALL INTFILL('%GRP',NGR  ,10,IEG,0) !
	CALL INTFILL('%GRP',NGS  ,11,IEG,0) !
	CALL INTFILL('%GRP',NGT  ,12,IEG,0) !
C	GROUP FILE
	CALL INTFILL('%GRF',N1   ,1 ,IEG,0) !
	CALL INTFILL('%GRF',N2   ,2 ,IEG,0) !
	CALL INTFILL('%GRF',N3   ,3 ,IEG,0) !
	CALL INTFILL('%GRF',N6   ,6 ,IEG,0) !
	CALL INTFILL('%GRF',N8   ,8 ,IEG,0) !

	CALL INTFILL('%GRF',NDX1 ,11,IEG,0) !
	CALL INTFILL('%GRF',NDX2 ,12,IEG,0) !
	CALL INTFILL('%GRF',NDX3 ,13,IEG,0) !
	CALL INTFILL('%GRF',NDX6 ,16,IEG,0) !
	CALL INTFILL('%GRF',NDX8 ,18,IEG,0) !
	
	CALL INTFILL('%GRF',NFLI ,21,IEG,0) !
	CALL INTFILL('%GRF',NFLR ,22,IEG,0) !
	
	CALL INTFILL('%GRF',LASI ,23,IEG,0) !
	CALL INTFILL('%GRF',LASR ,24,IEG,0) !
C	----------------------------------------

	ALLOCATE(IF1(N1),IF2(N2),IF3(N3),AF6(N6),AF8(N8))
	ALLOCATE(COORD(3,NNM),FIXE(NEF))
	ALLOCATE(IAX(LASI),AAX(LASR))

      READ(NFLI,REC=IEL) IAX
      READ(NFLR,REC=IEL) AAX

	FIXE(1:NEF) = 0.0D0

C	CALLING GRAVITY
	DO I = 1,3
	CALL RELFILL('%GRV',WW1(I),1,I,0)
	ENDDO


	CALL INTFILL('%NUB',NSC,1,4,0)
C	--------------------------
C	EXTRACT NODAL COORDINATE
	NPM(1) = N1
	NPI(1) = N1
	CALL CALLINTG(IF1,IAX,NDX1,NPM,NPI,1,'READ')
	DO INM = 1,NNM
	NOD = IF1(INM)
	COORD(1:3,INM) = 0.0D0
	DO ISC = 1,NSC
	CALL RELFILL('$XYZ',COORD(ISC,INM),ISC,NOD,0)  !GETTING HERE NODAL COORDINATE
	ENDDO
	ENDDO
C	--------------------------

	NPM(1) = N2
	NPI(1) = N2
	CALL CALLINTG(IF2,IAX,NDX2,NPM,NPI,1,'READ')  !CALLING ELEMENT ORIGINAL EQUATION NUMBER

	NPM(1) = N6
	NPI(1) = N6
	CALL CALLREAL(AF6,AAX,NDX6,NPM,NPI,1,'READ')  !CALLING AF6 FOR ELEMENT LOAD

	NPM(1) = N8
	NPI(1) = N8
	CALL CALLREAL(AF8,AAX,NDX8,NPM,NPI,1,'READ')   !CALLING AF8 FOR FIXEND

C	---------------------------------------------------------
	NPM(1) = N3
	NPI(1) = N3
	CALL CALLINTG(IF3,IAX,NDX3,NPM,NPI,1,'READ') !ELEMENT DATA

	ISEC = IF3(2)     !SECTION SET
	NPRT = IF3(6)     !NUMBER OF PART (EQUAL TO 1 FOR SHELL)
	
	CALL RELFILL('$SSC',TH  ,1,ISEC,0)           !THICKNESS
	CALL RELFILL('$SSC',FMAT,2,ISEC,0)           !MAT NO
	CALL RELFILL('$SSC',FTYP,3,ISEC,0)           !MAT TYPE  0=CONCRETE 1=STEEL
	MATN = INT(FMAT)
	MTYP = INT(FTYP)


	IF(MTYP.EQ.0) CALL RELFILL('%FNC',RHO,4,MATN,0)
	IF(MTYP.EQ.1) CALL RELFILL('%MSL',RHO,9,MATN,0)

C	---------------------------------------------------------

C	GET LOAD COMMAND
	CALL INTFILL('GRLI',IO  ,1,2,0) !0=ADD (NO REPLACE---IT WILL CREATE PROBLEM WITH DEAD LOAD)    
	CALL INTFILL('GRLI',LTYP,1,3,0) !LOAD TYPE
	CALL INTFILL('GRLI',NMDT,1,4,0) !NUMBER OF LOAD DATA
	CALL INTFILL('GRLI',LDAP,1,5,0) !LOAD APPLY TYPE  0 = CONSTRUCTION LOAD  1 = DEAD LOAD 
	ALLOCATE(FDAT(NMDT))
	DO IMDT = 1,NMDT
	CALL RELFILL('GRLR',FDAT(IMDT),1,IMDT,0)
	ENDDO


C     ----------------------------------------------------------
C     LOOP OVER GAUSS TO DET. STIFFNESS & FORCE VECTOR
C     ----------------------------------------------------------
	NGR = 3
	NGS = 3
      DO 400 IGR = 1,NGR
      DO 400 IGS = 1,NGS
	RI = GAUSP(IGR,NGR)
	SI = GAUSP(IGS,NGS)
	WW = GAUSW(IGR,NGR)*GAUSW(IGS,NGS)


	CALL SHAP4D(RI,SI,H,HD)
	CALL SHJACB(NNM,COORD,HD,VR,VS,VT,DET,FJ,XJI)
C     ------------------------------------------------------------

	SELECTCASE(LTYP)

	CASE(0) !BODY LOAD
	FW(1) = FDAT(1)*TH*RHO*DET*WW
	FW(2) = FDAT(2)*TH*RHO*DET*WW
	FW(3) = FDAT(3)*TH*RHO*DET*WW

	CASE(1) !TRACTION LOAD
	FW(1) = FDAT(1)*DET*WW
	FW(2) = FDAT(2)*DET*WW
	FW(3) = FDAT(3)*DET*WW

	CASE(2) !PRESSURE LOAD
	PRES = FDAT(1)
	FW(1) = PRES*VT(1)*DET*WW
	FW(2) = PRES*VT(2)*DET*WW
	FW(3) = PRES*VT(3)*DET*WW

	CASE(3) !HYDROSTATIC LOAD
	RHOW = FDAT(1)
	WLEV = FDAT(2)		!WATER LEVEL
	IGV  = INT(FDAT(3))
	WLEG = 0.0D0
	DO INM = 1,NNM
	WLEG = WLEG + H(INM)*COORD(IGV,INM)
	ENDDO
	IF(WLEG.LT.WLEV) THEN
	WDEP = WLEV - WLEG
	FW(1) = RHOW*VT(1)*DET*WW*WDEP
	FW(2) = RHOW*VT(2)*DET*WW*WDEP
	FW(3) = RHOW*VT(3)*DET*WW*WDEP
	ENDIF

	ENDSELECT


	DO IDR = 1,3

	NDUM = 6-IDR
	DO INM = 1,NNM
	FIXE(6*INM-NDUM) = FIXE(6*INM-NDUM) + H(INM)*FW(IDR)
	ENDDO

	ENDDO


C     ----------------------------------------------------------
400	CONTINUE
C     ----------------------------------------------------------

C	BACK UP AF6 FOR ELEMENT LOAD FIXEND
	DO IEF = 1,NEF
	IEQ  = IF2(IEF)						    !IF2(1:NEF) = ORIGINAL ELEMENT EQAUATION
	CALL RELFILL('$XLI',FIXE(IEF),IEQ,1,2)    !ADD TO INCREMENTAL EXTERNAL LOAD			(IO = 0 ADD)
	NUM = IEF+NEF+NEF+NEF
	AF6(NUM) = AF6(NUM)+FIXE(IEF)             !ACCUMULATE FIXEND FORCES.					(IO = 0 ADD)	
	NPM(1) = N6
	NPI(1) = N6
	CALL CALLREAL(AF6,AAX,NDX6,NPM,NPI,1,'WRIT')        !UPDATE AF6 FOR ELEMENT LOAD
	ENDDO


C	BACK UP AF8 FOR ELEMENT LOAD FIXEND
	DO IEF = 1,NEF
	IEQ  = IF2(IEF)						    !IF2(1:NEF) = ORIGINAL ELEMENT EQAUATION
	SELECTCASE(LDAP) !LOAD APPLY TYPE  0 = CONSTRUCTION LOAD  1 = DEAD LOAD 
	CASE(0)
	    CALL RELFILL('#LCT',FIXE(IEF),IEQ,1,2)    !ADD TO CONSTRUCTION LOAD			
	    NUM = IEF+NEF*4
	    AF8(NUM) = AF8(NUM)+FIXE(IEF)             !ACCUMULATE FIXEND CONSTRUCTION FORCES.					(IO = 0 ADD)
      CASE(1)
	    CALL RELFILL('#LDD',FIXE(IEF),IEQ,1,2) !ADD TO DEAD LOAD 
	    NUM = IEF
	    AF8(NUM) = AF8(NUM)+FIXE(IEF)          !ACCUMULATE FIXEND DEAD LOAD FORCES.					(IO = 0 ADD)
	ENDSELECT
	ENDDO
	NPM(1) = N8
	NPI(1) = N8
	CALL CALLREAL(AF8,AAX,NDX8,NPM,NPI,1,'WRIT')   !UPDATE AF8 FOR FIXEND



      WRITE(NFLI,REC=IEL) IAX
      WRITE(NFLR,REC=IEL) AAX
      
	DEALLOCATE(IAX,AAX)
	DEALLOCATE(IF1,IF2,IF3,AF6,AF8)
	DEALLOCATE(COORD,FIXE)	
	DEALLOCATE(FDAT)


	RETURN

	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

      SUBROUTINE SHLCSL2(IEG,IEL)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	LTMOPT(1)  WORKING ON MECHANICAL DATA
C	 0 = NO UPDATE STRESS & MATERIAL STATE
C	 1 = UPDATE STRESS & MATERIAL STATE
C	 2 = STIFFNESS ONLY

	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)


	DIMENSION VR(3),VS(3),VT(3)
	DIMENSION NPM(10),NPI(10)
	DIMENSION WW1(3),FW(3)
	DIMENSION FJ(4),XJI(4) 
	DIMENSION H(8),HD(2,8)

	ALLOCATABLE IF1(:),IF2(:),IF3(:),AF6(:),AF8(:)
	ALLOCATABLE COORD(:,:),FDAT(:),FIXE(:)
	ALLOCATABLE IAX(:),AAX(:)

C	----------------------------------------
C	GROUP DATA
C	----------------------------------------
	CALL INTFILL('%GRP',ITYPE,1 ,IEG,0) !
	CALL INTFILL('%GRP',ISTYP,2 ,IEG,0) !
	CALL INTFILL('%GRP',NELE ,3 ,IEG,0) !
	CALL INTFILL('%GRP',MPRT ,4 ,IEG,0) ! MAXP
	CALL INTFILL('%GRP',MGAS ,5 ,IEG,0) !
	CALL INTFILL('%GRP',MFIB ,6 ,IEG,0) !
	CALL INTFILL('%GRP',NEF  ,7 ,IEG,0) !
	CALL INTFILL('%GRP',NNM  ,8 ,IEG,0) !
	CALL INTFILL('%GRP',NNF  ,9 ,IEG,0) !
	CALL INTFILL('%GRP',NGR  ,10,IEG,0) !
	CALL INTFILL('%GRP',NGS  ,11,IEG,0) !
	CALL INTFILL('%GRP',NGT  ,12,IEG,0) !
C	GROUP FILE
	CALL INTFILL('%GRF',N1   ,1 ,IEG,0) !
	CALL INTFILL('%GRF',N2   ,2 ,IEG,0) !
	CALL INTFILL('%GRF',N3   ,3 ,IEG,0) !
	CALL INTFILL('%GRF',N6   ,6 ,IEG,0) !
	CALL INTFILL('%GRF',N8   ,8 ,IEG,0) !

	CALL INTFILL('%GRF',NDX1 ,11,IEG,0) !
	CALL INTFILL('%GRF',NDX2 ,12,IEG,0) !
	CALL INTFILL('%GRF',NDX3 ,13,IEG,0) !
	CALL INTFILL('%GRF',NDX6 ,16,IEG,0) !
	CALL INTFILL('%GRF',NDX8 ,18,IEG,0) !
	
	CALL INTFILL('%GRF',NFLI ,21,IEG,0) !
	CALL INTFILL('%GRF',NFLR ,22,IEG,0) !
	
	CALL INTFILL('%GRF',LASI ,23,IEG,0) !
	CALL INTFILL('%GRF',LASR ,24,IEG,0) !
C	----------------------------------------

	ALLOCATE(IF1(N1),IF2(N2),IF3(N3),AF6(N6),AF8(N8))
	ALLOCATE(COORD(3,NNM),FIXE(NEF))
	ALLOCATE(IAX(LASI),AAX(LASR))

      READ(NFLI,REC=IEL) IAX
      READ(NFLR,REC=IEL) AAX
      
      
	FIXE(1:NEF) = 0.0D0

C	CALLING GRAVITY
	DO I = 1,3
	CALL RELFILL('%GRV',WW1(I),1,I,0)
	ENDDO


	CALL INTFILL('%NUB',NSC,1,4,0)
C	--------------------------
C	EXTRACT NODAL COORDINATE
	NPM(1) = N1
	NPI(1) = N1
	CALL CALLINTG(IF1,IAX,NDX1,NPM,NPI,1,'READ')
	DO INM = 1,NNM
	NOD = IF1(INM)
	COORD(1:3,INM) = 0.0D0
	DO ISC = 1,NSC
	CALL RELFILL('$XYZ',COORD(ISC,INM),ISC,NOD,0)  !GETTING HERE NODAL COORDINATE
	ENDDO
	ENDDO
C	--------------------------


	NPM(1) = N2
	NPI(1) = N2
	CALL CALLINTG(IF2,IAX,NDX2,NPM,NPI,1,'READ')  !CALLING ELEMENT ORIGINAL EQUATION NUMBER

	NPM(1) = N6
	NPI(1) = N6
	CALL CALLREAL(AF6,AAX,NDX6,NPM,NPI,1,'READ')  !CALLING AF6 FOR ELEMENT LOAD

	NPM(1) = N8
	NPI(1) = N8
	CALL CALLREAL(AF8,AAX,NDX8,NPM,NPI,1,'READ')  !CALLING AF8 FOR FIXEND

C	---------------------------------------------------------
	NPM(1) = N3
	NPI(1) = N3
	CALL CALLINTG(IF3,IAX,NDX3,NPM,NPI,1,'READ') !ELEMENT DATA

	ISEC = IF3(2)     !SECTION SET
	NPRT = IF3(6)     !NUMBER OF PART (EQUAL TO 1 FOR SHELL)
	
	CALL RELFILL('$SSC',TH  ,1,ISEC,0)           !THICKNESS
	CALL RELFILL('$SSC',FMAT,2,ISEC,0)           !MAT NO
	CALL RELFILL('$SSC',FTYP,3,ISEC,0)           !MAT TYPE  0=CONCRETE 1=STEEL
	MATN = INT(FMAT)
	MTYP = INT(FTYP)


	IF(MTYP.EQ.0) CALL RELFILL('%FNC',RHO,4,MATN,0)
	IF(MTYP.EQ.1) CALL RELFILL('%MSL',RHO,9,MATN,0)

C	---------------------------------------------------------

C	GET LOAD COMMAND
	CALL INTFILL('GRLI',IO  ,1,2,0) !0=ADD (NO REPLACE---IT WILL CREATE PROBLEM WITH DEAD LOAD)    
	CALL INTFILL('GRLI',LTYP,1,3,0) !LOAD TYPE
	CALL INTFILL('GRLI',NMDT,1,4,0) !NUMBER OF LOAD DATA
	CALL INTFILL('GRLI',LDAP,1,5,0) !LOAD APPLY TYPE  0 = CONSTRUCTION LOAD  1 = DEAD LOAD 
	ALLOCATE(FDAT(NMDT))
	DO IMDT = 1,NMDT
	CALL RELFILL('GRLR',FDAT(IMDT),1,IMDT,0)
	ENDDO


	NGR = 3
C	-------------------------------------------------------
C     GAUSS POINT LOOP
C	-------------------------------------------------------
      DO 400  IGR=1,NGR


	SELECTCASE(LTYP)

	CASE(4) !EDGE PRESS
	IFACE = INT(FDAT(1))

	CASE(5) !EDGE TRACTION
	IFACE = INT(FDAT(1))

	CASE(6) !EDGE HYDRO
	IFACE = INT(FDAT(1))

	ENDSELECT


C	DEFINE GAUSS LOACATION AND WEIGTH
	CALL GFACE2D(IFACE,IGR,RI,SI,WT,NGR)
	CALL SHAP4D(RI,SI,H,HD)
	CALL SHJACB(NNM,COORD,HD,VR,VS,VT,DET,FJ,XJI)
C	---------------------
C	DEFINE EACH SURFACE
C	FACE 1; R= 1.0
C	FACE 2; R=-1.0
C	FACE 3: S= 1.0
C	FACE 4: S=-1.0
C	---------------------
	VR = 0.0D0
	VS = 0.0D0
C	---------------------------------------------
	SELECTCASE (IFACE)
	CASE(4)
	DO II = 1,NNM
	VR(1) = VR(1) + HD(2,II)*COORD(1,II)
	VR(2) = VR(2) + HD(2,II)*COORD(2,II)
	VR(3) = VR(3) + HD(2,II)*COORD(3,II)
	ENDDO
	CASE(2)
	DO II = 1,NNM
	VR(1) = VR(1) - HD(2,II)*COORD(1,II)
	VR(2) = VR(2) - HD(2,II)*COORD(2,II)
	VR(3) = VR(3) - HD(2,II)*COORD(3,II)
	ENDDO
	CASE(1)
	DO II = 1,NNM
	VR(1) = VR(1) - HD(1,II)*COORD(1,II)
	VR(2) = VR(2) - HD(1,II)*COORD(2,II)
	VR(3) = VR(3) - HD(1,II)*COORD(3,II)
	ENDDO
	CASE(3)
	DO II = 1,NNM
	VR(1) = VR(1) + HD(1,II)*COORD(1,II)
	VR(2) = VR(2) + HD(1,II)*COORD(2,II)
	VR(3) = VR(3) + HD(1,II)*COORD(3,II)
	ENDDO
	ENDSELECT
C     ------------------------------------------------------------
	CALL SCALEN(VR,VR,DET,3)
	CALL VECPRD(VR,VT,VS)
	CALL SCALEN(VS,VS,DUM,3)

	SELECTCASE(LTYP)

	CASE(4) !EDGE PRESS
	PRES = FDAT(2)
	FW(1) = PRES*WT*DET*TH*VS(1)
	FW(2) = PRES*WT*DET*TH*VS(2)
	FW(3) = PRES*WT*DET*TH*VS(3)

	CASE(5) !EDGE TRACTION
	FW(1) = FDAT(2)*WT*DET*TH
	FW(2) = FDAT(3)*WT*DET*TH
	FW(3) = FDAT(4)*WT*DET*TH

	CASE(6) !EDGE HYDRO
	RHOW = FDAT(2)
	WLEV = FDAT(3)		!WATER LEVEL
	IGV  = INT(FDAT(4))
	WLEG = 0.0D0
	DO INM = 1,NNM
	WLEG = WLEG + H(INM)*COORD(IGV,INM)
	ENDDO
	IF(WLEG.LT.WLEV) THEN
	WDEP = WLEV - WLEG
	FW(1) = RHOW*VS(1)*DET*WT*WDEP*TH
	FW(2) = RHOW*VS(2)*DET*WT*WDEP*TH
	FW(3) = RHOW*VS(3)*DET*WT*WDEP*TH
	ENDIF

	ENDSELECT


	DO IDR = 1,3

	NDUM = 6-IDR
	DO INM = 1,NNM
	FIXE(6*INM-NDUM) = FIXE(6*INM-NDUM) + H(INM)*FW(IDR)
	ENDDO

	ENDDO


C     ----------------------------------------------------------
400	CONTINUE
C     ----------------------------------------------------------



C	BACK UP AF6 FOR ELEMENT LOAD FIXEND
	DO IEF = 1,NEF
	IEQ  = IF2(IEF)						   !IF2(1:NEF) = ORIGINAL ELEMENT EQAUATION
	CALL RELFILL('$XLI',FIXE(IEF),IEQ,1,2) !ADD TO INCREMENTAL EXTERNAL LOAD			(IO = 0 ADD)
	NUM = IEF+NEF+NEF+NEF
	AF6(NUM) = AF6(NUM)+FIXE(IEF)          !ACCUMULATE FIXEND FORCES.					(IO = 0 ADD)	
	NPM(1) = N6
	NPI(1) = N6
	CALL CALLREAL(AF6,AAX,NDX6,NPM,NPI,1,'WRIT')  !UPDATE AF6 FOR ELEMENT LOAD
	ENDDO


C	BACK UP AF8 FOR ELEMENT LOAD FIXEND
	DO IEF = 1,NEF
	IEQ  = IF2(IEF)						   !IF2(1:NEF) = ORIGINAL ELEMENT EQAUATION
	SELECTCASE(LDAP) !LOAD APPLY TYPE  0 = CONSTRUCTION LOAD  1 = DEAD LOAD 
	CASE(0)
	    CALL RELFILL('#LCT',FIXE(IEF),IEQ,1,2) !ADD TO CONSTRUCTION LOAD	
	    NUM = IEF+NEF*4
	    AF8(NUM) = AF8(NUM)+FIXE(IEF)          !ACCUMULATE FIXEND CONSTRUCTION FORCES.					(IO = 0 ADD)
      CASE(1)
	    CALL RELFILL('#LDD',FIXE(IEF),IEQ,1,2) !ADD TO DEAD LOAD 
	    NUM = IEF
	    AF8(NUM) = AF8(NUM)+FIXE(IEF)          !ACCUMULATE FIXEND DEAD LOAD FORCES.					(IO = 0 ADD)
	ENDSELECT	
	ENDDO
	NPM(1) = N8
	NPI(1) = N8
	CALL CALLREAL(AF8,AAX,NDX8,NPM,NPI,1,'WRIT')  !UPDATE AF8 FOR FIXEND


      WRITE(NFLI,REC=IEL) IAX
      WRITE(NFLR,REC=IEL) AAX
      
	DEALLOCATE(IAX,AAX)
	DEALLOCATE(IF1,IF2,IF3,AF6,AF8)
	DEALLOCATE(COORD,FIXE)	
	DEALLOCATE(FDAT)


	RETURN

	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================

      SUBROUTINE SHLCSL3(IEG,IEL,FW,POS,LDAP)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	LTMOPT(1)  WORKING ON MECHANICAL DATA
C	 0 = NO UPDATE STRESS & MATERIAL STATE
C	 1 = UPDATE STRESS & MATERIAL STATE
C	 2 = STIFFNESS ONLY

	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)


	DIMENSION VR(3),VS(3),VT(3)
	DIMENSION NPM(10),NPI(10)
	DIMENSION WW1(3),FW(3),POS(2)
	DIMENSION FJ(4),XJI(4) 
	DIMENSION H(8),HD(2,8)

	ALLOCATABLE IF1(:),IF2(:),IF3(:),AF6(:),AF8(:)
	ALLOCATABLE COORD(:,:),FDAT(:),FIXE(:)
	ALLOCATABLE IAX(:),AAX(:)

C	----------------------------------------
C	GROUP DATA
C	----------------------------------------
	CALL INTFILL('%GRP',ITYPE,1 ,IEG,0) !
	CALL INTFILL('%GRP',ISTYP,2 ,IEG,0) !
	CALL INTFILL('%GRP',NELE ,3 ,IEG,0) !
	CALL INTFILL('%GRP',MPRT ,4 ,IEG,0) ! MAXP
	CALL INTFILL('%GRP',MGAS ,5 ,IEG,0) !
	CALL INTFILL('%GRP',MFIB ,6 ,IEG,0) !
	CALL INTFILL('%GRP',NEF  ,7 ,IEG,0) !
	CALL INTFILL('%GRP',NNM  ,8 ,IEG,0) !
	CALL INTFILL('%GRP',NNF  ,9 ,IEG,0) !
	CALL INTFILL('%GRP',NGR  ,10,IEG,0) !
	CALL INTFILL('%GRP',NGS  ,11,IEG,0) !
	CALL INTFILL('%GRP',NGT  ,12,IEG,0) !
C	GROUP FILE
	CALL INTFILL('%GRF',N1   ,1 ,IEG,0) !
	CALL INTFILL('%GRF',N2   ,2 ,IEG,0) !
	CALL INTFILL('%GRF',N3   ,3 ,IEG,0) !
	CALL INTFILL('%GRF',N6   ,6 ,IEG,0) !
	CALL INTFILL('%GRF',N8   ,8 ,IEG,0) !

	CALL INTFILL('%GRF',NDX1 ,11,IEG,0) !
	CALL INTFILL('%GRF',NDX2 ,12,IEG,0) !
	CALL INTFILL('%GRF',NDX3 ,13,IEG,0) !
	CALL INTFILL('%GRF',NDX6 ,16,IEG,0) !
	CALL INTFILL('%GRF',NDX8 ,18,IEG,0) !
	
	CALL INTFILL('%GRF',NFLI ,21,IEG,0) !
	CALL INTFILL('%GRF',NFLR ,22,IEG,0) !
	
	CALL INTFILL('%GRF',LASI ,23,IEG,0) !
	CALL INTFILL('%GRF',LASR ,24,IEG,0) !
C	----------------------------------------

	ALLOCATE(IF1(N1),IF2(N2),IF3(N3),AF6(N6),AF8(N8))
	ALLOCATE(COORD(3,NNM),FIXE(NEF))
	ALLOCATE(IAX(LASI),AAX(LASR))

      READ(NFLI,REC=IEL) IAX
      READ(NFLR,REC=IEL) AAX

	FIXE(1:NEF) = 0.0D0

C	CALLING GRAVITY
	DO I = 1,3
	CALL RELFILL('%GRV',WW1(I),1,I,0)
	ENDDO


	CALL INTFILL('%NUB',NSC,1,4,0)
C	--------------------------
C	EXTRACT NODAL COORDINATE
	NPM(1) = N1
	NPI(1) = N1
	CALL CALLINTG(IF1,IAX,NDX1,NPM,NPI,1,'READ')
	DO INM = 1,NNM
	NOD = IF1(INM)
	COORD(1:3,INM) = 0.0D0
	DO ISC = 1,NSC
	CALL RELFILL('$XYZ',COORD(ISC,INM),ISC,NOD,0)  !GETTING HERE NODAL COORDINATE
	ENDDO
	ENDDO
C	--------------------------

	NPM(1) = N2
	NPI(1) = N2
	CALL CALLINTG(IF2,IAX,NDX2,NPM,NPI,1,'READ')  !CALLING ELEMENT ORIGINAL EQUATION NUMBER
	
	NPM(1) = N6
	NPI(1) = N6
	CALL CALLREAL(AF6,AAX,NDX6,NPM,NPI,1,'READ')  !CALLING AF6 FOR ELEMENT LOAD

	NPM(1) = N8
	NPI(1) = N8
	CALL CALLREAL(AF8,AAX,NDX8,NPM,NPI,1,'READ')   !CALLING AF8 FOR FIXEND

C	---------------------------------------------------------
	NPM(1) = N3
	NPI(1) = N3
	CALL CALLINTG(IF3,IAX,NDX3,NPM,NPI,1,'READ') !ELEMENT DATA

	ISEC = IF3(2)     !SECTION SET
	NPRT = IF3(6)     !NUMBER OF PART (EQUAL TO 1 FOR SHELL)
	
	CALL RELFILL('$SSC',TH  ,1,ISEC,0)           !THICKNESS
	CALL RELFILL('$SSC',FMAT,2,ISEC,0)           !MAT NO
	CALL RELFILL('$SSC',FTYP,3,ISEC,0)           !MAT TYPE  0=CONCRETE 1=STEEL
	MATN = INT(FMAT)
	MTYP = INT(FTYP)


	IF(MTYP.EQ.0) CALL RELFILL('%FNC',RHO,4,MATN,0)
	IF(MTYP.EQ.1) CALL RELFILL('%MSL',RHO,9,MATN,0)

C	---------------------------------------------------------


C     ----------------------------------------------------------
C     POINT LOAD EQUIVALENT NODAL FORCE
C     ----------------------------------------------------------
	RI = POS(1)
	SI = POS(2)

	CALL SHAP4D(RI,SI,H,HD)
	CALL SHJACB(NNM,COORD,HD,VR,VS,VT,DET,FJ,XJI)
C     ------------------------------------------------------------

	DO IDR = 1,3

	NDUM = 6-IDR
	DO INM = 1,NNM
	FIXE(6*INM-NDUM) = FIXE(6*INM-NDUM) + H(INM)*FW(IDR)
	ENDDO

	ENDDO

C     ----------------------------------------------------------
C     ----------------------------------------------------------

C	BACK UP AF6 FOR ELEMENT LOAD FIXEND
	DO IEF = 1,NEF
	IEQ  = IF2(IEF)						    !IF2(1:NEF) = ORIGINAL ELEMENT EQAUATION
	CALL RELFILL('$XLI',FIXE(IEF),IEQ,1,2)    !ADD TO INCREMENTAL EXTERNAL LOAD			(IO = 0 ADD)
	NUM = IEF+NEF+NEF+NEF
	AF6(NUM) = AF6(NUM)+FIXE(IEF)             !ACCUMULATE FIXEND FORCES.					(IO = 0 ADD)	
	NPM(1) = N6
	NPI(1) = N6
	CALL CALLREAL(AF6,AAX,NDX6,NPM,NPI,1,'WRIT')  !UPDATE AF6 FOR ELEMENT LOAD
	ENDDO


C	BACK UP AF8 FOR ELEMENT LOAD FIXEND
	DO IEF = 1,NEF
	IEQ  = IF2(IEF)						    !IF2(1:NEF) = ORIGINAL ELEMENT EQAUATION
	SELECTCASE(LDAP) !LOAD APPLY TYPE  0 = CONSTRUCTION LOAD  1 = DEAD LOAD 
	CASE(0)
	    CALL RELFILL('#LCT',FIXE(IEF),IEQ,1,2) !ADD TO CONSTRUCTION LOAD	
	    NUM = IEF+NEF*4
	    AF8(NUM) = AF8(NUM)+FIXE(IEF)          !ACCUMULATE FIXEND CONSTRUCTION FORCES.					(IO = 0 ADD)
      CASE(1)
	    CALL RELFILL('#LDD',FIXE(IEF),IEQ,1,2) !ADD TO DEAD LOAD 
	    NUM = IEF
	    AF8(NUM) = AF8(NUM)+FIXE(IEF)          !ACCUMULATE FIXEND DEAD LOAD FORCES.					(IO = 0 ADD)
	ENDSELECT
	ENDDO
	NPM(1) = N8
	NPI(1) = N8
	CALL CALLREAL(AF8,AAX,NDX8,NPM,NPI,1,'WRIT')   !UPDATE AF8 FOR FIXEND


      WRITE(NFLI,REC=IEL) IAX
      WRITE(NFLR,REC=IEL) AAX
      
	DEALLOCATE(IAX,AAX)
	DEALLOCATE(IF1,IF2,IF3,AF6,AF8)
	DEALLOCATE(COORD,FIXE)	


	RETURN

	END



C	=======================================================================
C	=== CONSTRUCTION ANALYSIS =============== SONGSAK NOV2007 =============
C	=======================================================================
C	=======================================================================
C	=======================================================================
C	=======================================================================
      SUBROUTINE CSAELGL (LEST)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C     -----------------------------------------------------------------
C	ELEMENT GLOBAL LOAD
C	---	ELEMENT POINT LOAD
C	---	ELEMENT LINE  LOAD
C	---	ELEMENT PATCH LOAD
C     -----------------------------------------------------------------
      COMMON /NUMB/ HED(20),MODEX,NRE,NSN,NEG,NBS,NLS,NLA,
     +              NSC,NSF,IDOF(9),LCS,ISOLOP,LSYMM

      COMMON /LOCA/ LID,LDS,LEL,LDC,LXY,LCH,LNU,LMP,LGP,LMS,LGS,
     1              LCO,LEX,LLM,LES,LEC,LED,LEI,LEE,LMA,LLF,LLV,
     2              LRE,LDI,LDL,LDT,LDK,LER,LEV,LTT,LWV,LAR,LBR,
     3              LVE,LDD,LRT,LBU,LBC,LVL,LAL,LEF,LDU,LPR,LLO,
	4              LRV,LRT1,LRET,LRET1,LDM,LDPT,LVL1,LMV,LXI,LCM,LCC,
	5			    LCN,LDIM,LFRE,LSFC,LLOF

      COMMON /INOU/ ITI,ITO,ISO,NDATI,NPLOT,NKFAC,NELEM,
     1              IFPR(10),IFPL(10)

      COMMON /ELEM/ NAME(2),ITYPE,ISTYP,NLOPT,MTMOD,NSINC,ITOLEY,
     1              NELE,NMPS,NGPS,NMP,NGP,NNM,NEX,NCO,NNF,NWG,NEFC,
     2              NPT,NWA,NWS,KEG,MEL,NNO,NEF,NELTOT,NMV,MTYP,ISECT

	COMMON /GiDEle/ LGID 

      COMMON A(9000000),IA(9000000)

	ALLOCATABLE XYP(:,:),PVL(:,:),LOD(:) 
	ALLOCATABLE XLUMP(:,:),PLUMP(:,:) 
	ALLOCATABLE IFDN(:),FDAT(:) 


      DIMENSION LEST(1),LTYPE(20),COORP(3),GG(3),POS(3)


C	GET LOAD COMMAND
	CALL INTFILL('GRLI',LTYP,1,3,0) !LOAD TYPE
	CALL INTFILL('GRLI',NMDT,1,4,0) !NUMBER OF LOAD DATA
	CALL INTFILL('GRLI',LDAP,1,5,0) !LOAD APPLY TYPE  0 = CONSTRUCTION LOAD  1 = DEAD LOAD 
	ALLOCATE(FDAT(NMDT))
	DO IMDT = 1,NMDT
	CALL RELFILL('GRLR',FDAT(IMDT),1,IMDT,0)
	ENDDO




	KLDN = 100
C     -----------------------------------------------------

C	KLN = NUMBER OF LOAD POINT   KLM = NUMBER OF ELEMENT IN PATCH

	KF = 0
	KLN  = INT(FDAT(1))
	KLM  = INT(FDAT(2))
	KF = 2


C	============================
	SELECTCASE(LTYP)

C	IOPT  --->  0 = POINT LOAD   1 = LINE LOAD   2 = PATCH LOAD

C	----------------
	CASE(7) !SHELL POINT LOAD
	NTYPE = 1
	LTYPE(1) = 9
	IOPT  = 0 
	NCOL  = 3   !NUMBER OF GLOBAL  COORDINATE
	NPR   = 2   !NUMBER OF NATURAL COORDINATE
C	----------------
	CASE(8) !SHELL LINE LOAD
	NTYPE = 1
	LTYPE(1) = 9
	IOPT  = 1 
	NCOL  = 3   !NUMBER OF GLOBAL  COORDINATE
	NPR   = 2   !NUMBER OF NATURAL COORDINATE
C	----------------
	CASE(9) !SHELL PATCH LOAD
	NTYPE = 1
	LTYPE(1) = 9
	IOPT  = 2 
	NCOL  = 3   !NUMBER OF GLOBAL  COORDINATE
	NPR   = 2   !NUMBER OF NATURAL COORDINATE
C	----------------


	CASE DEFAULT
	RETURN

	ENDSELECT
C	============================

	ALLOCATE( XYP(NCOL,KLN),PVL(NCOL,KLN),LOD(KLM) )
	ALLOCATE( XLUMP(NCOL,KLDN),PLUMP(NCOL,KLDN) )	
	ALLOCATE( IFDN(KLDN) )


C	READ LOAD POSITIONS AND VALUES
	DO J = 1,KLN
	PVL(1:NCOL,J) = FDAT(KF+1:KF+NCOL)
	KF = KF+NCOL
	XYP(1:NCOL,J) = FDAT(KF+1:KF+NCOL)
	KF = KF+NCOL
	ENDDO


C	READ ELEMENT IN PATCH
	DO ILM = 1,KLM
	KF = KF + 1
	LOD(ILM) = INT(FDAT(KF))
	ENDDO	


C     ----------------------------------------------

C	GENERATE LUMP LOAD USING GAUSS POINT METHOD	
	CALL PATCHL(XLUMP,PLUMP,XYP,PVL,NCOL,KLN,MLDN,IOPT)

	IFDN(1:MLDN) = 0
C     ----------------------------------------------
	DO 1000 IEG = 1,NEG
	KEG = IEG
	NELEMI = 10 + IEG
      NELEMA = 30 + IEG
      REWIND NELEMI
      REWIND NELEMA
C      READ (NELEMI) (IA(NLNU),NLNU=LNU,LNU + LEST(IEG)-1)
C      READ (NELEMA) ( A(NLNU),NLNU=LMP,LMP + LEST(IEG+NEG)-1)
      READ (NELEMI) IA(LNU:LNU + LEST(IEG    )-1)
      READ (NELEMA)  A(LMP:LMP + LEST(IEG+NEG)-1)     
      CALL MOVLEV (2)

C	SCAN FOR ELEMENT TYPE
	IFIND = 0
	DO I = 1,NTYPE
	IF(ITYPE.EQ.LTYPE(I)) IFIND = 1
	ENDDO
	IF(IFIND.EQ.0) GOTO 1000
	

C     ------------------------
	DO 500 ILDN = 1,MLDN   !MLDN
	IF(IFDN(ILDN).EQ.1) GOTO 500

	COORP(1:NCOL) = XLUMP(1:NCOL,ILDN)


	TOL   = 1.001
	IFIND = 0
	
	DO 400 ILM = 1,KLM

	IELE = LOD(ILM)
	
	CALL ELEREODER(IA(LGID),NELE,IELE)

	CALL PSEARCH(POS,A(LCO),IA(LEX),COORP,NPR,NCO,NNM,NEX,IELE,
	1			 SLEN)


	ITEST = 0
	DO IPR = 1,NPR
	IF(ABS(POS(IPR)).GT.TOL) ITEST = 1
	IF(SLEN.GT.0.01) ITEST = 1
	ENDDO

C	+++++++++++++++++++++
	IF(ITEST.EQ.0) THEN
	IFDN(ILDN) = 1
	

	GG(1:3) = 0.0D0
	DO ICOL = 1,NCOL
	GG(ICOL) = PLUMP(ICOL,ILDN)
	ENDDO


	SELECTCASE(ITYPE)

	CASE(9)
	CALL SHLCSL3(IEG,IELE,GG,POS,LDAP)

	ENDSELECT

	EXIT
	ENDIF
C	+++++++++++++++++++++


400	CONTINUE



500	CONTINUE
C     ------------------------

	ITEST = 0
	DO ILDN = 1,MLDN
	ITEST = ITEST + IFDN(ILDN)
	ENDDO
	IF(ITEST.EQ.MLDN) EXIT
	

1000	CONTINUE
C     ----------------------------------------------

	DEALLOCATE( XYP,PVL,LOD )
	DEALLOCATE( XLUMP,PLUMP )
	DEALLOCATE( IFDN )	

C     -----------------------------------------------------

	DEALLOCATE(FDAT)


      RETURN
      END
C	=====================================================================
C	=====================================================================
C	=====================================================================

