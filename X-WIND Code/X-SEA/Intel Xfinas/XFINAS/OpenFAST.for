C	=====================================================================
C	=====================================================================
	SUBROUTINE WAITRESULT (ID,MSF,VELOINPUT,ACCEINPUT,DISPINPUT,OPT)
      USE kernel32, ONLY: sleep
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      CHARACTER*4 OPT
      COMMON /DYNAFAST/ ICOUNT
      COMMON /SOLU/ NEQ,NEQ1,NBLOCK,MK,BM,NWK,NWM,ISTOR,NFAC,
     +              NRED,KPOSD,DETK,DET1,DAVR,STOL
      COMMON /ITER/ RHO,RHOP,RHOPREV,RTOL,ETOL,DLMAX,ALP,
	1              NSTEP,NPRIN,NDRAW,
	2			  KONEQ,NIREF,ITOPT,ICONV,NOLIN,KSTEP,
     3              LIMEQ(2),ITEMAX,NUMREF,NUMITE,ITETOT,LIMET
      
      COMMON /COUANA/ COUPLEANALYSIS
      COMMON /FAST_TP/ N_TOTAL_TP,NPOINT(100)
      COMMON /FASTSTOREDATA/ VELO(1:6),ACCE(1:6),DISP(1:3),ROTA(1:3)
!      DIMENSION VELO(6),ACCE(6)
!      DIMENSION DISP(3),ROTA(3)
      DIMENSION VELOINPUT(NEQ),ACCEINPUT(NEQ)
      DIMENSION DISPINPUT(NEQ),ROTAINPUT(NEQ)
      DIMENSION ID(MSF,NEQ)
      
C      USE IFPORT
      VELO = 0.
      ACCE = 0.
      DISP = 0.
      ROTA = 0.
      IF (COUPLEANALYSIS.EQ.1) RETURN
      DO IJK = 1,N_TOTAL_TP
      NODEFAST = NPOINT(IJK)    
      
      IF (OPT.EQ."REAF") THEN
      IReason = -1D0
      DO 10 WHILE (IReason.NE.0) 
          
          IReason = -1
          READ (4000,*,IOSTAT=IReason)  VELO(1:6),ACCE(1:6),DISP(1:3),ROTA(1:3)
          
20        IF (IReason.EQ.0)THEN
          ICOUNT = ICOUNT + 1D0
          ENDIF
      
      IF (IReason.EQ.-1D0)THEN
       IF (COUPLEANALYSIS.EQ.3) CALL SLEEP (1)
      ENDIF
      
      
!      NODEFAST = 1D0
      
10    CONTINUE
      
      DO I = 1,6
      IEQ            = ID(I,NODEFAST)
      VELOINPUT(IEQ) = VELO(I)
      ACCEINPUT(IEQ) = ACCE(I)
      ENDDO
      
      DO I = 1,3
      IEQ            = ID(I,NODEFAST)
      DISPINPUT(IEQ) = DISP(I)
      ENDDO
      
      DO I = 4,6
      IEQ            = ID(I,NODEFAST)
      DISPINPUT(IEQ) = ROTA(I)
      ENDDO
      
      ELSEIF (OPT.EQ."REAO") THEN 
          REWIND (4000)
          DO J = 1,ICOUNT-1
          READ (4000,*,IOSTAT=IReason) VELO(1:6),ACCE(1:6),ROTA(1:3)
          ENDDO
      DO I =1,6
      IEQ = ID(I,NODEFAST)
      
      VELOINPUT(IEQ) = VELO(I)
      ACCEINPUT(IEQ) = ACCE(I)
      ENDDO
      
      ELSEIF (OPT.EQ."REAT") THEN
          
      !NODEFAST = 1.0D0
      DO I = 1,6
      IEQ            = ID(I,NODEFAST)
      VELOINPUT(IEQ) = VELO(I)
      ACCEINPUT(IEQ) = ACCE(I)
      ENDDO
      
       DO I = 1,3
       IEQ            = ID(I,NODEFAST)
       DISPINPUT(IEQ) = DISP(I)
       ENDDO
       
       DO I = 4,6
       IEQ            = ID(I,NODEFAST)
       DISPINPUT(IEQ) = ROTA(I)
       ENDDO
       ENDIF
      
      ENDDO ! END LOOP TP
      
      END
C	=====================================================================
C	=====================================================================
	SUBROUTINE FORCEANDMOMENT (AM,BKG,ID,MSF,VELOINPUT,ACCELEINPUT,NELEMENT,ITASK,OPT)   
      USE kernel32, ONLY: sleep
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      CHARACTER*4 OPT
      COMMON /SOLU/ NEQ,NEQ1,NBLOCK,MK,BM,NWK,NWM,ISTOR,NFAC,
     +              NRED,KPOSD,DETK,DET1,DAVR,STOL
      COMMON /MGRAV/ NGRAV
      DIMENSION EDAT(20)
      DIMENSION AM(14,14)
      DIMENSION R(1)
      DIMENSION FY(6)
      DIMENSION Y1(6)
      DIMENSION BKG(14,14)
      DIMENSION ACCELE(6),VELO(6)
      DIMENSION ACCELEINPUT(NEQ),VELOINPUT(NEQ)
      DIMENSION ID(MSF,1)
      DIMENSION STIFF(6,6),AMASS(6,6)
      DIMENSION EDATA(20)
      DIMENSION REACTION(6,100),N_REACTION(100),OUT_REACTION(6),AMOMENT(3)
      COMMON /NUMB/ HED(20),MODEX,NRE,NSN,NEG,NBS,NLS,NLA,
     +              NSC,NSF,IDOF(9),LCS,ISOLOP,LSYMM,ICONTROLSPEC
      COMMON /FAST_TP/ N_TOTAL_TP,NPOINT(100)
      DIMENSION COOR_TP(3),COOR_RE(3),COOR_DIFF(3)
      !COMMON /FASTOUTPUT/ STIFF(6,6),AMASS(6,6)
      COMMON /COUANA/ COUPLEANALYSIS
      
      IF (COUPLEANALYSIS.NE.3) RETURN
      !OPEN(UNIT=4010,FILE='REACTION_XSEA.DAT'     ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      EDAT = 0.
      REACTION = 0.
      N_REACTION = 0.
      CALL LOCATN('OGSP',KSUPG,NOUT2,NSN,2)  
      
      INDEX = 1
      DO ISN = 1,NSN
      EDAT = 0.
	DO I = 1,NOUT2
	CALL RELFILL('OGSP',EDAT(I),I,ISN,0)  
      ENDDO
         IF (EDAT(1).NE.0.0D0.AND.EDAT(2).NE.0.0D0.AND.EDAT(3).NE.0.0D0.AND.EDAT(4).NE.0.0D0.AND.EDAT(5)
     1   .NE.0.0D0.AND.EDAT(6).NE.0.0D0) THEN
         REACTION(1:6,INDEX) =  EDAT(1:6)
         N_REACTION(INDEX) = ISN
         INDEX = INDEX + 1
         ENDIF
      ENDDO

      
      X_COOR_TP = 0.0D0
      Y_COOR_TP = 0.0D0
      Z_COOR_TP = 0.0D0
      COOR_TP   = 0.
      DO I = 1,N_TOTAL_TP
      CALL RELFILL('@XYZ',AX1,1,NPOINT(I),0)  !GETTING NODAL COORDINATE
	CALL RELFILL('@XYZ',AY1,2,NPOINT(I),0)  !GETTING NODAL COORDINATE
	CALL RELFILL('@XYZ',AZ1,3,NPOINT(I),0)  !GETTING NODAL COORDINATE
      X_COOR_TP = X_COOR_TP  + AX1
      Y_COOR_TP = Y_COOR_TP  + AY1
      Z_COOR_TP = Z_COOR_TP  + AZ1
      ENDDO
      ! AVERAGE INTERFACE POINT POINT
      COOR_TP(1) = (X_COOR_TP)/N_TOTAL_TP
      COOR_TP(2) = (Y_COOR_TP)/N_TOTAL_TP
      COOR_TP(3) = (Z_COOR_TP)/N_TOTAL_TP
      
      OUT_REACTION = 0.
      DO I = 1,INDEX - 1
      AMOMENT = 0.0D0   
      COOR_RE = 0.
      COOR_DIFF = 0.
      CALL RELFILL('@XYZ',COOR_RE(1),1,N_REACTION(I),0)  !GETTING NODAL COORDINATE
	CALL RELFILL('@XYZ',COOR_RE(2),2,N_REACTION(I),0)  !GETTING NODAL COORDINATE
	CALL RELFILL('@XYZ',COOR_RE(3),3,N_REACTION(I),0)  !GETTING NODAL COORDINATE 
      COOR_DIFF(1) = COOR_TP(1) - COOR_RE(1)
      COOR_DIFF(2) = COOR_TP(2) - COOR_RE(2)
      COOR_DIFF(3) = COOR_TP(3) - COOR_RE(3)

      CALL VECPRD (COOR_DIFF,REACTION(1:3,I),AMOMENT)
      OUT_REACTION(1) = OUT_REACTION(1) + REACTION(1,I)
      OUT_REACTION(2) = OUT_REACTION(2) + REACTION(2,I)
      OUT_REACTION(3) = OUT_REACTION(3) + REACTION(3,I)
      OUT_REACTION(4) = OUT_REACTION(4) + REACTION(4,I) + AMOMENT(1)
      OUT_REACTION(5) = OUT_REACTION(5) + REACTION(5,I) + AMOMENT(2)
      OUT_REACTION(6) = OUT_REACTION(6) + REACTION(6,I) + AMOMENT(3)
      ENDDO
      
      
      
      WRITE (4001,10) OUT_REACTION(1),OUT_REACTION(2),OUT_REACTION(3),OUT_REACTION(4),OUT_REACTION(5),OUT_REACTION(6)
      
10    FORMAT (E12.5,2X,E12.5,2X,E12.5,2X,E12.5,2X,E12.5,2X,E12.5)

      
      END
C	=====================================================================
C	=====================================================================
	SUBROUTINE SELFWEIGHTLOAD (WEIGHT)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      CHARACTER*4 OPT
      COMMON /ELEM/ NAME(2),ITYPE,ISTYP,NLOPT,MTMOD,NSINC,ITOLEY,
     1              NELE,NMPS,NGPS,NMP,NGP,NNM,NEX,NCO,NNF,NWG,NEFC,
     2              NPT,NWA,NWS,KEG,MEL,NNO,NEF,NELTOT,NMV,MTYP,ISECT
      COMMON / SECTIONDETAIL / BFISHAPE,TFISHAPE,DISHAPE,BWISHAPE,TWISHAPE,ROOTISHAPE
     1                        ,BFHSHAPE,TFHSHAPE,DHSHAPE,BWHSHAPE,TWHSHAPE,ROOTHSHAPE
     1                        ,BANGLE,TANGLE,HANGLE,THANGLE,AXBAR
     1                        ,BFCHANNEL,TFCHANNEL,DCHANNEL,TWCHANNEL,HCHANNEL,ROOTCSHAPE,CXBAR
     1                        ,BFTSHAPE,TFTSHAPE,DTSHAPE,BWTSHAPE,TWTSHAPE,TYBAR
     1                        ,BBOX,TFBOX,DBOX,HBOX,TWBOX,ROOTBOX
     1                        ,DPIPE,TPIPE
     1                        ,DROUND
     1                        ,BREC,HREC
     1                        ,SECTIONT,SECTIONS,AJ,GSECTION,CW,AREA,AIS,AIT,ARGS,ARGT
     1                        ,PLASTICT,PLASTICS,AMODULUS
      WEIGHT = 0
      DO NELEMENT = 1,NELE
          
        CALL CALLENGTH (NELEMENT,VREW,0,ALENGTH,AMIDX,AMIDY,AMIDZ,BUOCYX,BUOCYY,BUOCYZ,NOP
     1 ,ATMIDX,ATMIDY,ATMIDZ)
        CALL SELECTPROP (NELEMENT,AMODULUS,POSSION,DENSITY,NSTEELGRAD,FU,FY)

        CALL ARRAYELEMENT (NELEMENT,NSECTION)
        
        WEIGHT = ALENGTH*DENSITY*AREA + WEIGHT
        
      ENDDO
      
      END
      
C	=====================================================================
C	=====================================================================
      SUBROUTINE DIRECTORY_OF_FILE_FAST_FATIGUE(FILENUMBER)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      CHARACTER *20 FILENUMBER,ROOTFST
      CHARACTER*200 DIREC_VELO_ACC,DIREC_FOR_MOM,DIREC_FOR_ORI
      COMMON /COUANA/ COUPLEANALYSIS

      OPEN (UNIT=4005,FILE='FILENUMBER_X_SEA.DAT'      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN (UNIT=4006,FILE='FILENUMBER_FAST.DAT'      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      ! TRIM(FILENUMBER)
      READ (4005,*) NSCATTER,FILENUMBER
      
      REWIND (4006)
      WRITE (4006,10) FILENUMBER
10    FORMAT (A20)
      
      ROOTFST = ".TXT"
      DIREC_VELO_ACC = "VELOCITY AND ACCELERATION (FAST)"//TRIM(FILENUMBER)!//TRIM(ROOTFST) 
      DIREC_FOR_MOM  = "FORCE AND MOMENT (X-SEA) (FAST)"//TRIM(FILENUMBER) !//TRIM(ROOTFST) 
      
      OPEN(UNIT=4000,FILE=DIREC_VELO_ACC        ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4001,FILE=DIREC_FOR_MOM         ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4002,FILE='TRASITION POINT.txt' ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4004,FILE='STIFFNESS AND MASS.txt' ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      IF (COUPLEANALYSIS.EQ.3.OR.COUPLEANALYSIS.EQ.2)THEN 
      !CLOSE(UNIT=4000,STATUS='DELETE')
      !CLOSE(UNIT=4001,STATUS='DELETE')
      OPEN(UNIT=4000,FILE=DIREC_VELO_ACC      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4001,FILE=DIREC_FOR_MOM       ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      ENDIF
      
      END
C	=====================================================================
C	=====================================================================
      SUBROUTINE CLEAR_DIRECTORY_OF_FILE_FAST_FATIGUE
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

      !CLOSE(UNIT=4000,STATUS='DELETE')
      !CLOSE(UNIT=4001,STATUS='DELETE')
      END
C	=====================================================================
C	=====================================================================
      SUBROUTINE DIRECTORY_OF_FILE_FAST
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      CHARACTER *20 FILENUMBER,ROOTFST
      CHARACTER*200 DIREC_VELO_ACC,DIREC_FOR_MOM,DIREC_FOR_ORI
      COMMON /COUANA/ COUPLEANALYSIS


      OPEN (UNIT=4005,FILE='TURBINELOADCASE.DAT'      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      REWIND (4005)
      READ (4005,*) FILENUMBER
      
10    FORMAT (A20)
      
      ROOTFST = ".TXT"
      DIREC_VELO_ACC = "VELOCITY AND ACCELERATION (FAST)"//TRIM(FILENUMBER)!//TRIM(ROOTFST) 
      DIREC_FOR_MOM  = "FORCE AND MOMENT (X-SEA) (FAST)"//TRIM(FILENUMBER)!//TRIM(ROOTFST) 
      DIREC_FOR_ORI  = "FORCE AND MOMENT (Original FAST)"//TRIM(FILENUMBER) !//TRIM(ROOTFST)
      
      OPEN(UNIT=4000,FILE=DIREC_VELO_ACC      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4001,FILE=DIREC_FOR_MOM      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4004,FILE='STIFFNESS AND MASS.txt'      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      
      IF (COUPLEANALYSIS.EQ.3.OR.COUPLEANALYSIS.EQ.2)THEN 

      OPEN(UNIT=4000,FILE=DIREC_VELO_ACC      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4001,FILE=DIREC_FOR_MOM      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      ENDIF
      
      END
C	=====================================================================
      SUBROUTINE DIRECTORY_OF_FILE_FAST_CLEAR
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      CHARACTER *20 FILENUMBER,ROOTFST
      CHARACTER*200 DIREC_VELO_ACC,DIREC_FOR_MOM
      COMMON /COUANA/ COUPLEANALYSIS
      IF (COUPLEANALYSIS.EQ.1.OR.COUPLEANALYSIS.EQ.2) return
      OPEN (UNIT=4008,FILE='FILENUMBER_Batch.DAT'      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=553,FILE="INTEGER_TO_STRING"           ,STATUS='UNKNOWN',SHARE='DENYNONE')
      
      INDEX = 0
      OPEN (UNIT=4005,FILE='TURBINELOADCASE.DAT'      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      REWIND (4005)
      READ (4005,*) INDEX

      DO I = 1,INDEX
      REWIND (553)
      WRITE (553,10) I
10    FORMAT (I5)
      REWIND (553)
      READ (553,*) FILENUMBER
      ROOTFST = ".TXT"
      DIREC_VELO_ACC = "VELOCITY AND ACCELERATION (FAST)"//TRIM(FILENUMBER)!//TRIM(ROOTFST) 
      DIREC_FOR_MOM  = "FORCE AND MOMENT (X-SEA) (FAST)"//TRIM(FILENUMBER) !//TRIM(ROOTFST) 
      
      OPEN(UNIT=4000,FILE=DIREC_VELO_ACC             ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4001,FILE=DIREC_FOR_MOM              ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4002,FILE='TRASITION POINT.txt'      ,STATUS='UNKNOWN' ,SHARE='DENYNONE')
      OPEN(UNIT=4004,FILE='STIFFNESS AND MASS.txt'   ,STATUS='UNKNOWN' ,SHARE='DENYNONE')

      CLOSE(UNIT=4000,STATUS='DELETE')
      CLOSE(UNIT=4001,STATUS='DELETE')
      ENDDO
      
      CLOSE (553)
      
      END
C	=====================================================================
C	=====================================================================
      SUBROUTINE CLEAR_DIRECTORY_OF_FILE_FAST
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)

      !CLOSE(UNIT=4000,STATUS='DELETE')
      !CLOSE(UNIT=4001,STATUS='DELETE')
      END