      SUBROUTINE MARINE_GROWTH
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      COMMON /INOU/ ITI,ITO,ISO,NDATI,NPLOT,NKFAC,NELEM,
     1              IFPR(10),IFPL(10)
      COMMON /MARINE_CONTROL/ NPARA_MARINE
      COMMON /MARINE_GROWTH_DATA/ AELEVATION(100,100),AMARINE_THICKNESS(100,100),DENSITY(100,100),NDATA_MARINE(100,2)
     1                           ,IRPARA(100),NPARA(100)
      COMMON /MARINE_GROWTH_DATA_RA/ AELEVATION_RA(100,100),AMARINE_THICKNESS_RA(100,100),DENSITY_RA(100,100)
      READ (ITI,*) ! HEADER
      READ (ITI,*) NPARA_MARINE
      IF (NPARA_MARINE.EQ.0) RETURN
      
      DO I = 1,NPARA_MARINE
      READ (ITI,*) IRPARA(I),NPARA(I),NDATA_MARINE_READ
         IF (IRPARA(I).EQ.1)THEN ! REGULAR WAVE
         DO J = 1,NDATA_MARINE_READ
            READ (ITI,*) AELEVATION(NPARA(I),J),AMARINE_THICKNESS(NPARA(I),J),DENSITY(NPARA(I),J)
         ENDDO
         NDATA_MARINE(NPARA,1) = NDATA_MARINE_READ
         
         ELSEIF (IRPARA(I).EQ.2)THEN ! RANDOM WAVE
         DO J = 1,NDATA_MARINE_READ
            READ (ITI,*) AELEVATION_RA(NPARA(I),J),AMARINE_THICKNESS_RA(NPARA(I),J),DENSITY_RA(NPARA(I),J)
         ENDDO    
         NDATA_MARINE(NPARA,2) = NDATA_MARINE_READ
         ENDIF
      ENDDO
      
      END
C     ----------------------------------------------------------------
      SUBROUTINE MARINE_GROWTH_CAL (PARA_OFF,ELEMENT_ELEVATION,THICKNESS,DENSITY_OUT,IORRE)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      COMMON /MARINE_GROWTH_DATA/ AELEVATION(100,100),AMARINE_THICKNESS(100,100),DENSITY(100,100),NDATA_MARINE(100,2)
     1                           ,IRPARA(100),NPARA(100)
      COMMON /MARINE_GROWTH_DATA_RA/ AELEVATION_RA(100,100),AMARINE_THICKNESS_RA(100,100),DENSITY_RA(100,100)
      COMMON /offshoreselectx_data_correction/ offselect,NUM_OF_OFFSHORE_PARAMETER
      DIMENSION AELE(100),ATHICKNESS(100)
      DIMENSION ADENSITY(100)
      IF (IORRE.EQ.1)THEN
      offselect = PARA_OFF
      CALL OFFSPARA_CALL (WVHIGHT,WDEPTH,THIGHT,H1POS,H2POS,IWAVE,ORDER,PERIOD,GRAV,RHOW,RHOA,
     1                  WVZETA,VTIDE,VWIND0,H0,AP,SP,CS,VB,HM,HW,HC,RHIGH,UH,ALPHA,Z0,WVTIME,
     1                  VGV,VH1,VH2,VWIND,PEAKWLEV,SEABED,NCURRENT,POWERLAW,VCURRENTL,
     1                  VCURRENTAPI,UHAPI,NWINDO,AVERAGE,UHD,VCURRENTP,FACTOR,
     1                  WKF,CBF,WFC,TIME)
       NLOOP = NDATA_MARINE(offselect,1)
      ELSEIF (IORRE.EQ.2)THEN   
      CALL SELECTSPECTRUM (PARA_OFF,SEABED,WVHIGHT,WDEPTH,H1POS,H2POS,IRWAVE,PERIOD,GRAV,RHOW,RHOA,WKF,WFC,
     1                      FREQ,VGV,VH1,VH2,VWIND,SDG,NSWIND,UHD,ALPHA,Z0,RHIGH,FWIND,TAP,UCURRENT,WVH1,WVH2,
     1                      PER1,PER2,SHAPE1,SHAPE2)  
      
       NLOOP = NDATA_MARINE(PARA_OFF,2)
      ENDIF
      
      AELE = 0.
      ATHICKNESS = 0.
      THICKNESS  = 0.
      
      ! ELEMENT ELEVATION
      REV = ELEMENT_ELEVATION
      
      IF (IORRE.EQ.1)THEN
      DO I = 1,NLOOP
          AELE(I) = AELEVATION(PARA_OFF,I)
          ATHICKNESS(I) =  AMARINE_THICKNESS(PARA_OFF,I)
          ADENSITY(I)   =  DENSITY(PARA_OFF,I)
      ENDDO
      
      DO 100 I = 1,NLOOP
          IF (I.NE.NLOOP) THEN
             IF (REV.LE.AELE(I).AND.REV.GE.AELE(I+1)) THEN
                THICKNESS   = ATHICKNESS(I)
                DENSITY_OUT = ADENSITY(I)
             EXIT
             ENDIF
          ELSEIF (I.EQ.NLOOP) THEN
             IF (REV.LE.AELE(I)) THEN
                THICKNESS = ATHICKNESS(I)
                DENSITY_OUT = ADENSITY(I)
             EXIT
             ENDIF 
          ENDIF
100   CONTINUE
      
      ELSEIF (IORRE.EQ.2)THEN
      DO I = 1,NLOOP
          AELE(I) = AELEVATION_RA(PARA_OFF,I)
          ATHICKNESS(I) =  AMARINE_THICKNESS_RA(PARA_OFF,I)
          ADENSITY(I)   =  DENSITY_RA(PARA_OFF,I)
      ENDDO
      
      DO 200 I = 1,NLOOP
           IF (I.NE.NLOOP) THEN
             IF (REV.LE.AELE(I).AND.REV.GE.AELE(I+1)) THEN
                THICKNESS = ATHICKNESS(I)
                DENSITY_OUT = ADENSITY(I)
             EXIT
             ENDIF
          ELSEIF (I.EQ.NLOOP) THEN
             IF (REV.LE.AELE(I)) THEN
                THICKNESS = ATHICKNESS(I)
                DENSITY_OUT = ADENSITY(I)
             EXIT
             ENDIF 
          ENDIF
200   CONTINUE   
      ENDIF
      
      END
      
C     ----------------------------------------------------------------
      SUBROUTINE MARINE_GROWTH_WEIGHT (MLE,IGIDM,XYZ,NMARINE_GROUP,GX,GY,GZ,WW_MARINE,AAL,BBL)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      COMMON /MGRAV/ NGRAV  
      COMMON /ELEM/ NAME(2),ITYPE,ISTYP,NLOPT,MTMOD,NSINC,ITOLEY,                      
     1              NELE,NMPS,NGPS,NMP,NGP,NNM,NEX,NCO,NNF,NWG,NEFC,                  
     2              NPT,NWA,NWS,KEG,MEL,NNO,NEF,NELTOT,NMV,MTYP,ISECT    
      COMMON /MARINE_CONTROL/ NPARA_MARINE
      COMMON /MARINE_GROWTH_DATA/ AELEVATION(100,100),AMARINE_THICKNESS(100,100),DENSITY(100,100),NDATA_MARINE(100,2)
     1                           ,IRPARA(100),NPARA(100)
      COMMON /MARINE_GROWTH_DATA_RA/ AELEVATION_RA(100,100),AMARINE_THICKNESS_RA(100,100),DENSITY_RA(100,100)
      DIMENSION XYZ(NCO*NNM,NELE)
      DIMENSION IGIDM(NELE)
      ALLOCATABLE GROWTH_DIS(:),DENSITY_MARINE_DIS(:)
      
      DIMENSION WW_MARINE(6)
      DIMENSION VR(3)
      ALLOCATE (GROWTH_DIS(101),DENSITY_MARINE_DIS(101))
      
      AAL = 1.0D0
      BBL = 1.0D0
      DO  IGID = 1,NELE
	MEMGD = IGIDM(IGID) 
	IF(MEMGD.EQ.MLE) THEN
	MLE_COOR = IGID 
	GOTO 200
	ENDIF
	ENDDO
200	CONTINUE
      
      XR = (XYZ(4,MLE_COOR)+XYZ(1,MLE_COOR))*0.5D0
	YR = (XYZ(5,MLE_COOR)+XYZ(2,MLE_COOR))*0.5D0
	ZR = (XYZ(6,MLE_COOR)+XYZ(3,MLE_COOR))*0.5D0
      
      SELECTCASE(NGRAV)
      CASE(1)
        RLEV = XR
      CASE(2)
        RLEV = YR
      CASE(3)
        RLEV = ZR
      ENDSELECT
      
      IORRE = IRPARA(NMARINE_GROUP)
      OFFSELECT = NPARA(NMARINE_GROUP)
      ! CHECK LAYER
      ! BEGIN
      CALL MARINE_GROWTH_CAL (OFFSELECT,XYZ(3,MLE_COOR),GROWTH1,DENSITY_MARINE1,IORRE)
      
      ! END
      CALL MARINE_GROWTH_CAL (OFFSELECT,XYZ(6,MLE_COOR),GROWTH2,DENSITY_MARINE2,IORRE)
      
      ! MID
      CALL MARINE_GROWTH_CAL (OFFSELECT,RLEV,GROWTH,DENSITY_MARINE,IORRE)
      
      CALL FRAME_AREA (MLE,GROWTH,AREA,"MA")
      
      WW_MARINE= 0.
      WW_MARINE(1) = DENSITY_MARINE*AREA*GX
      WW_MARINE(2) = DENSITY_MARINE*AREA*GX
      WW_MARINE(3) = DENSITY_MARINE*AREA*GY
      WW_MARINE(4) = DENSITY_MARINE*AREA*GY
      WW_MARINE(5) = DENSITY_MARINE*AREA*GZ
      WW_MARINE(6) = DENSITY_MARINE*AREA*GZ
      
      AAL = 0.0D0
      BBL = 1.0D0
      
      IF (GROWTH1.NE.GROWTH2)THEN ! MODIFY AND PROVIDED RATIO LENGTH
          GROWTH_DIS = 0.
          DENSITY_MARINE_DIS = 0.
          VR(1) = XYZ(4,MLE_COOR)-XYZ(1,MLE_COOR)
          VR(2) = XYZ(5,MLE_COOR)-XYZ(2,MLE_COOR)
          VR(3) = XYZ(6,MLE_COOR)-XYZ(3,MLE_COOR)
          CALL SCALEN(VR,VR,ALENGTH,3)
          
          DO JJ = 1,101
              IF (JJ.EQ.1) THEN
                 IF (XYZ(3,MLE_COOR).LE.XYZ(6,MLE_COOR))THEN
                 RLEV =  XYZ(3,MLE_COOR) 
                 ELSEIF (XYZ(3,MLE_COOR).GT.XYZ(6,MLE_COOR))THEN
                 RLEV =  XYZ(6,MLE_COOR) 
                 ENDIF
              ENDIF
              IF (JJ.NE.1) RLEV =  RLEV + ALENGTH/100
              CALL MARINE_GROWTH_CAL (OFFSELECT,RLEV,GROWTH_DIS(JJ),DENSITY_MARINE_DIS(JJ),IORRE)
          ENDDO
          
          ALENGTH_TOTAL = 0.0D0
          NCOUNT = 0.0D0
          DO JJ = 1,101
              ASMALL = ALENGTH/100
              IF (GROWTH_DIS(JJ).NE.0) THEN
              ALENGTH_TOTAL = ALENGTH_TOTAL +  ASMALL
              NCOUNT = NCOUNT + 1
              ENDIF
          ENDDO
          IF (NCOUNT.EQ.1) GOTO 100
          IF (XYZ(3,MLE_COOR).LE.XYZ(6,MLE_COOR))THEN
          BBL = ALENGTH_TOTAL/ALENGTH
          ELSEIF (XYZ(3,MLE_COOR).GT.XYZ(6,MLE_COOR))THEN
          AAL = 1-(ALENGTH_TOTAL/ALENGTH)
          BBL = 1D0
          ENDIF
          
      CALL FRAME_AREA (MLE,MAXVAL(GROWTH_DIS),AREA,"MA")
          
      WW_MARINE= 0.
      WW_MARINE(1) = MAXVAL(DENSITY_MARINE_DIS)*AREA*GX
      WW_MARINE(2) = MAXVAL(DENSITY_MARINE_DIS)*AREA*GX
      WW_MARINE(3) = MAXVAL(DENSITY_MARINE_DIS)*AREA*GY
      WW_MARINE(4) = MAXVAL(DENSITY_MARINE_DIS)*AREA*GY
      WW_MARINE(5) = MAXVAL(DENSITY_MARINE_DIS)*AREA*GZ
      WW_MARINE(6) = MAXVAL(DENSITY_MARINE_DIS)*AREA*GZ
          
          
      ENDIF
      
100    DEALLOCATE(GROWTH_DIS,DENSITY_MARINE_DIS)
      
      END
      
C     ----------------------------------------------------------------
      SUBROUTINE MARINE_GROWTH_MASS (LEST,RMASS,ID)
C     PRODUCE BY SONGSAK TO CALL N1,N2 FOR FRAME ELEMENT
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      COMMON /ELEM/ NAME(2),ITYPE,ISTYP,NLOPT,MTMOD,NSINC,ITOLEY,
     1              NELE,NMPS,NGPS,NMP,NGP,NNM,NEX,NCO,NNF,NWG,NEFC,
     2              NPT,NWA,NWS,KEG,MEL,NNO,NEF,NELTOT,NMV,MTYP,ISECT
      COMMON /LOCA/ LID,LDS,LEL,LDC,LXY,LCH,LNU,LMP,LGP,LMS,LGS,
     1              LCO,LEX,LLM,LES,LEC,LED,LEI,LEE,LMA,LLF,LLV,
     2              LRE,LDI,LDL,LDT,LDK,LER,LEV,LTT,LWV,LAR,LBR,
     3              LVE,LDD,LRT,LBU,LBC,LVL,LAL,LEF,LDU,LPR,LLO,
	4              LRV,LRT1,LRET,LRET1,LDM,LDPT,LVL1,LMV,LXI,LCM,LCC,
	5			    LCN,LDIM,LFRE,LSFC,LLOF
      COMMON /NUMB/ HED(20),MODEX,NRE,NSN,NEG,NBS,NLS,NLA,
     1              NSC,NSF,IDOF(9),LCS,ISOLOP,LSYMM,ICONTROLSPEC
      COMMON /LOCO/ LOP,LOS,LSS,LSS2,LSS3,LHG,LHGN
      COMMON /GiDEle/ LGID ! added by de silva 2004/6/28
      
      COMMON /MARINE_CONTROL/ NPARA_MARINE
      
      COMMON A(9000000),IA(9000000)
      DIMENSION LMNM(100)
      DIMENSION LEST(1)
      DIMENSION ANODAL_MASS(2)
      DIMENSION RMASS(1),ID(NSF,1),VALV(6)
      
      !NFRAME  = 0.0D0
      !NSHELL3 = 0.0D0
      !NSHELL4 = 0.0D0
      !NSOLID6 = 0.0D0
      !NSOLID8 = 0.0D0
      
      IF (NPARA_MARINE.EQ.0) RETURN
      
	CALL INTFILL('#GMP',NEGEL,1,2,0)  ! TOTAL NUMBER OF ELEMENT
      
      DO I = 1,NEGEL
      IGM = I
	CALL INTFILL('OGDM',IEG,1,IGM,0)    !CALL ELEMENT GROUP NUMBER
      CALL INTFILL('OGRF',NFL4 ,14,IEG,0) !CALL FILE STORING THE CONNECTIVITY FOR SPECIFIC ELEM. GROUP IEG
      LMNM = 0                            !VECTOR STORE ELEMENT CONNECTIVITY NUMBER
      CALL READCON_T(IGM,LMNM,NFL4,NNM_T)
      
      IF (NNM_T.EQ.2)THEN
      CALL ADD_MARINE_FRAME (IGM,LMNM(1:NNM_T),IA(LID),NSF,A(LCO),IA(LGID),IA(LHG),IA(LHGN),ANODAL_MASS) 
      
      ! ADDED MASS
      DO ICM = 1,2
         VALV(1:6) = ANODAL_MASS(ICM)
	   DO J = 1,6
	   KK = 0
	   DO K = 1,NSF
	   IF(J.EQ.IDOF(K)) THEN
	   KK = K
	   EXIT
	   ENDIF
	   ENDDO
	   IF(KK.NE.0) THEN
	   IEQ = ID(KK,LMNM(ICM))
	   IF(IEQ.NE.0) RMASS(IEQ) = RMASS(IEQ) + VALV(J)
	   ENDIF
	   ENDDO
      ENDDO
      ELSEIF (NNM_T.NE.2)THEN
      AAAA = 1
      
      ENDIF

      
      ENDDO
      
      END
C     ----------------------------------------------------------------
      SUBROUTINE ADD_MARINE_FRAME (NELEMENT,NNODE,ID,MSF,XYZ,IGIDM,IPIN,IHSET,ANODAL_MASS)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
      COMMON /MGRAV/ NGRAV  
      COMMON /ELEM/ NAME(2),ITYPE,ISTYP,NLOPT,MTMOD,NSINC,ITOLEY,
     1              NELE,NMPS,NGPS,NMP,NGP,NNM,NEX,NCO,NNF,NWG,NEFC,
     2              NPT,NWA,NWS,KEG,MEL,NNO,NEF,NELTOT,NMV,MTYP,ISECT
      COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)
      
      COMMON /MARINE_GROWTH_DATA/ AELEVATION(100,100),AMARINE_THICKNESS(100,100),DENSITY(100,100),NDATA_MARINE(100,2)
     1                           ,IRPARA(100),NPARA(100)
      COMMON /MARINE_GROWTH_DATA_RA/ AELEVATION_RA(100,100),AMARINE_THICKNESS_RA(100,100),DENSITY_RA(100,100)
      
      DIMENSION NNODE(2)
      DIMENSION ID(MSF,1)
      DIMENSION WW_MARINE(3)
      DIMENSION IHSET(1),IPIN(14),LRPIN(14,1),IGIDM(NELE)
      DIMENSION FRMMASS(7,2),FIXF(7,2)
      DIMENSION VR(3)
      DIMENSION XYZ(NCO*NNM,NELE)
      DIMENSION ANODAL_MASS(2)
      
      
      DO  IGID = 1,NELE
	MEMGD = IGIDM(IGID) 
	IF(MEMGD.EQ.NELEMENT) THEN
	MLE = IGID 
	GOTO 210
	ENDIF
      ENDDO
210   CONTINUE
       
      VR(1) = XYZ(4,MLE)-XYZ(1,MLE)
	VR(2) = XYZ(5,MLE)-XYZ(2,MLE)
	VR(3) = XYZ(6,MLE)-XYZ(3,MLE)
	CALL SCALEN(VR,VR,ELN,3)
      
      XR = (XYZ(4,MLE)+XYZ(1,MLE))*0.5D0
	YR = (XYZ(5,MLE)+XYZ(2,MLE))*0.5D0
	ZR = (XYZ(6,MLE)+XYZ(3,MLE))*0.5D0
      
      SELECTCASE(NGRAV)
      CASE(1)
        RLEV = XR
      CASE(2)
        RLEV = YR
      CASE(3)
        RLEV = ZR
      ENDSELECT
      
      ! READ ONLY FIRST DATA
      IORRE = IRPARA(1)
      OFFSELECT = 1
      CALL MARINE_GROWTH_CAL (OFFSELECT,RLEV,GROWTH,DENSITY_MARINE,IORRE)
      
      CALL FRAME_AREA (NELEMENT,GROWTH,AREA,"MA")
      
      
      ! GENERATE INPUT DATA OF ADDED MASS
      ! CHECK ELEMENT LOCATION
      ! CHECK TOP
      SELECTCASE(NGRAV)
      CASE(1)
        RLEV_TOP = AX1
      CASE(2)
        RLEV_TOP = AY1
      CASE(3)
        RLEV_TOP = AZ1
      ENDSELECT
      
      ! CHECK BOTTOM
      SELECTCASE(NGRAV)
      CASE(1)
        RLEV_BOTTOM = AX2
      CASE(2)
        RLEV_BOTTOM = AY2
      CASE(3)
        RLEV_BOTTOM = AZ2
      ENDSELECT
      
      ! CHECK BOTTOM
      SELECTCASE(NGRAV)
      CASE(1)
        WW_MARINE(1) =  DENSITY_MARINE*AREA
      CASE(2)
        WW_MARINE(2)  = DENSITY_MARINE*AREA
      CASE(3)
        WW_MARINE(3)  = DENSITY_MARINE*AREA
      ENDSELECT

      
      FRMMASS = 0.
C	-----------------------------------------------------
	DO I = 1,3   
      RP   = WW_MARINE(i)
	RPB  = WW_MARINE(i)
	DISA = 0.0D0
	DISB = ELN
	IDIR = I
	IND  = 1
      
	
      IPIN(1:14) = 0
      IHET = IHSET(MLE)
      IF(IHET.NE.0) IPIN(1:14) = LRPIN(1:14,IHET)
      
C	DOING SMOOTH LINE DIAGRAM CALCULATION
      
	!CALL SMHUNIF(MLE,IDIR,RP,RPB,DISA,DISB,ECR,ECS,ECT,IND,
	!			 XYZ,RANG,NP_SMH,ILCN,LOC,LOE,IMOM,'VARY')
	!CALL SMHUNIF(MLE,IDIR,RP,RPB,DISA,DISB,ECR,ECS,ECT,IND,
	!			 XYZ,RANG,NP_SMH,ILCC,LOC,LOE,IMOM,'CONT')
	CALL FRAMFIX(RP,RPB,DISA,DISB,ECR,ECS,ECT,IDIR,0,VR,
	1			   ELN,FIXF,RANG,LOC,LOE,IMOM,IPIN)
      
	DO J = 1,7
	DO K = 1,2
	FRMMASS(J,K) = FRMMASS(J,K) + FIXF(J,K)
	ENDDO
	ENDDO
	
      ENDDO
      
      SELECTCASE(NGRAV)
      CASE(1)
        ANODAL_MASS(1) = FRMMASS(1,1)
        ANODAL_MASS(2) = FRMMASS(1,2)
      CASE(2)
        ANODAL_MASS(1) = FRMMASS(2,1)
        ANODAL_MASS(2) = FRMMASS(2,2)
      CASE(3)
        ANODAL_MASS(1) = FRMMASS(3,1)
        ANODAL_MASS(2) = FRMMASS(3,2)
      ENDSELECT
      
      END