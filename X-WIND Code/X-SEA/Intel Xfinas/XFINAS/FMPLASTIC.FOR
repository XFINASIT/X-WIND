C	=============================================================
C	=============================================================
C	=============================================================
	SUBROUTINE FMPLAS(PROPM,EPS,DR,SIGR,WA,II,NFIB,NMP,ISEC,IEG)
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	=============================================================
C	=============================================================
	DIMENSION PROPM(1)
	DIMENSION DR(49),SIGR(8),EPS(8),WA(3*NFIB,1)


	CALL FMPLS(PROPM,EPS,DR,SIGR,WA(1,II),NFIB,NMP,ISEC,IEG,II)


	RETURN

	END


C	=============================================================
C	=============================================================
C	=============================================================
	SUBROUTINE FMPLS(PROPM,EPS,DR,SIGR,WA,NFIB,NMP,ISEC,IEG,IPT) 
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	=============================================================
      CHARACTER*1 NAMEI(4)
      DIMENSION   INAME(4)
C	=============================================================
	DIMENSION PROPM(NMP,1)
	DIMENSION DR(49),SIGR(7),EPS(7),WA(3,1)
	DIMENSION AA(10)

	III = 1
	INAME(1:4) = [5,1,ISEC,IEG] !XSEH
	CALL ICONC(INAME,NAMEI)
	DO II = 1,7
	CALL MRELFIL(NAMEI,AA(II),III,II,0) !Store Section Props 
	ENDDO
	NSTS  = INT(AA(2))
	NTOUR = INT(AA(6))
	NSEGT = INT(AA(7))

C	-----------------------
C	INITIALIZED THE ARRAY
C	-----------------------
	DR   = 0.0
	SIGR = 0.0


C	---------------------------------------------------------
	DO IFIB = 1,NFIB
C	---------------------------------------------------------

	III = 1 + NSEGT + (1+NTOUR+NFIB+NSTS)*(IPT-1) + 1 + NTOUR + IFIB
	DO II = 1,7
	CALL MRELFIL(NAMEI,AA(II),III,II,0) !Store Section Props 
	ENDDO

	DVOL = AA(1) ; SC = AA(2) ; TC = AA(3) ; FMT = AA(4) 
	WP   = AA(6) ; TR = AA(7)


	MTSET = INT(FMT)

	YOUNG = PROPM(1,MTSET)
	POISN = PROPM(2,MTSET)
	YIELD = PROPM(3,MTSET)
	YOUN2 = PROPM(4,MTSET)
C	================================================
C	COMPUTE GAUSS POINT STRAIN
C	================================================
	FEPS  = EPS(1)  + TC*EPS(5)  - SC*EPS(6) + WP*EPS(7)
C	------------------------------------------------

C	---------------------------------------------------------
C	SEGMENT GAUSS POINT AXIAL STRESS
C	---------------------------------------------------------
	CALL SECPAS(WA(1,IFIB),WA(2,IFIB),FEPS,SIG,YOUNG,YOUN2,
	1			WA(3,IFIB),YIELD,YMODU)
C	---------------------------------------------------------

C	----------------------------
C	INTEGRATING OVER THE SECTION
C	----------------------------

	GMODU = 0.5*YMODU/(1.0+POISN)

C	---------------
C	RIGIDITY MATRIX 
C	---------------
	DR(1)  = DR(1)  + YMODU*DVOL									!EA
	DR(25) = DR(25) + GMODU*(SC*SC + TC*TC)*DVOL - GMODU*TR*DVOL	!GJr

	DR(29) = DR(29) + TC*YMODU*DVOL									!EQs
	DR(33) = DR(33) + TC*TC*YMODU*DVOL								!EIs
	
	DR(36) = DR(36) - SC*YMODU*DVOL									!-EQt
	DR(40) = DR(40) - SC*TC*YMODU*DVOL								!-EIst
	DR(41) = DR(41) + SC*SC*YMODU*DVOL								!EIt

	DR(43) = DR(43) + WP*YMODU*DVOL									!EQw
	DR(47) = DR(47) + WP*TC*YMODU*DVOL								!EItw
	DR(48) = DR(48) - WP*SC*YMODU*DVOL								!-EIsw
	DR(49) = DR(49) + WP*WP*YMODU*DVOL								!EIw

C	---------------------
C	STRESS CONTRIBUTION
C	---------------------
	SIGR(1) = SIGR(1) + SIG*DVOL		!P
	SIGR(5) = SIGR(5) + TC*SIG*DVOL		!Ms
	SIGR(6) = SIGR(6) - SC*SIG*DVOL		!Mt
	SIGR(7) = SIGR(7) + WP*SIG*DVOL		!Mw


C	---------------------------------------------------------
	ENDDO
C	---------------------------------------------------------
	


	SIGR(4) = SIGR(4) + DR(25)*EPS(4) !Mr





	RETURN

	END


C	=============================================================
C	=============================================================
C	=============================================================
      BLOCKDATA GAUSEC
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	=============================================================
	COMMON /GASEC/  GAUSP(10,10),GAUSW(10,10)
C	=============================================================

C
      DATA ((GAUSP(I,J),I=1,10),J=1,8) /
     1            10*0.,
     2           -.57735026918963,  .57735026918963,  8*0.,
     3           -.77459666924148,  .00000000000000,  .77459666924148,
     3           7*0.,
     4           -.86113631159405, -.33998104358486,  .33998104358486,
     4            .86113631159405,  6*0.,
     5           -.90617984593866, -.53846931010568,  .00000000000000,
     5            .53846931010568,  .90617984593866,  5*0.,
     6           -.93246951420315, -.66120938646627, -.23861918608320,
     6            .23861918608320,  .66120938646627,  .93246951420315,
     6            4*0.,
     7           -.94910791234276, -.74153118559939, -.40584515137740,
     7            .00000000000000,  .40584515137740,  .74153118559939,
     7            .94910791234276,  3*0.,
     8           -.96028985649754, -.79666647741363, -.52553240991633,
     8           -.18343464249565,  .18343464249565,  .52553240991633,
     8            .79666647741363,  .96028985649754,  2*0./
      DATA ((GAUSP(I,J),I=1,10),J=9,10) /
     9           -.96816023950763, -.83603110732664, -.61337143270059,
     9           -.32425342340381,  .00000000000000,  .32425342340381,
     9            .61337143270059,  .83603110732664,  .96816023950763,
     9            .00000000000000,
     1           -.97390652851717, -.86506336668899, -.67940956829902,
     1           -.43339539412925, -.14887433898163,  .14887433898163,
     1            .43339539412925,  .67940956829902,  .86506336668899,
     1            .97390652851717/
      DATA ((GAUSW(I,J),I=1,10),J=1,8) /
     1           2.00000000000000,  9*0.,
     2           1.00000000000000, 1.00000000000000, 8*0.,
     3            .55555555555556,  .88888888888889,  .55555555555556,
     3            7*0.,
     4            .34785484513745,  .65214515486255,  .65214515486255,
     4            .34785484513745,  6*0.,
     5            .23692688505619,  .47862867049937,  .56888888888889,
     5            .47862867049937,  .23692688505619,  5*0.,
     6            .17132449237917,  .36076157304814,  .46791393457269,
     6            .46791393457269,  .36076157304814,  .17132449237917,
     6            4*0.,
     7            .12948496616887,  .27970539148928,  .38183005050512,
     7            .41795918367347,  .38183005050512,  .27970539148928,
     7            .12948496616887,  3*0.,
     8            .10122853629038,  .22238103445337,  .31370664587789,
     8            .36268378337836,  .36268378337836,  .31370664587789,
     8            .22238103445337,  .10122853629038,  2*0./
      DATA ((GAUSW(I,J),I=1,10),J=9,10) /
     9            .08127438836157,  .18064816069486,  .26061069640294,
     9            .31234707704000,  .33023935500126,  .31234707704000,
     9            .26061069640294,  .18064816069486,  .08127438836157,
     9            .00000000000000,
     1            .06667134430869,  .14945134915058,  .21908636251598,
     1            .26926671931000,  .29552422471475,  .29552422471475,
     1            .26926671931000,  .21908636251598,  .14945134915058,
     1            .06667134430869/

      END


C	=============================================================
C	=============================================================
C	=============================================================
	SUBROUTINE SECPAS(EPSP,SIGP,EPS,SIG,YOUNG,YOUN2,EPSTN,YIELD,
	1				  YMODU) 
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C	=============================================================

	HARDS = YOUNG*YOUN2/(YOUNG-YOUN2)
	DEPS  = EPS - EPSP
	DSIG  = DEPS*YOUNG

	SIGO = SIGP

	SIG  = SIGO + DSIG

	PREY  = YIELD + HARDS*EPSTN

	

	IF(ABS(SIGO).GE.PREY) GO TO 20
	ESCUR = ABS(SIG) - PREY
	IF(ESCUR.LE.0.0) GO TO 40
	RFACT = ESCUR/ABS(DSIG)
	GO TO 30

20	IF(SIG.GT.0.0.AND.DSIG.LT.0.0) GO TO 40
	IF(SIG.LT.0.0.AND.DSIG.GT.0.0) GO TO 40
	RFACT = 1.0

30	REDUC = 1.0 - RFACT
	SIGO  = SIGO + REDUC*DSIG + 
	1	    RFACT*DSIG*(1.0-YOUNG/(YOUNG+HARDS))
	EPSTN = EPSTN + RFACT*DSIG/(YOUNG+HARDS)
	EPSTN = ABS(EPSTN)
	YMODU = YOUN2

	GO TO 50	

40	YMODU = YOUNG
	SIGO  = SIGO + DSIG
50	SIGP  = SIGO

	EPSP = EPS

	SIG  = SIGP


	RETURN

	END


C	=============================================================
C	=============================================================
C	=============================================================

