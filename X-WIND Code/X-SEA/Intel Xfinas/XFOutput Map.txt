

NUMOUT(1)  = FIRST OUTPUT FILE NUMBER

NUMOUT(2)  = NUMBER OF GID ELEMENT
NUMOUT(3)  = MAX ELEMENT OUTPUT DATA

NUMOUT(4)  = NUMBER OF LINK ELEM
NUMOUT(5)  = MAX LINK OUTPUT DATA

NUMOUT(6)  = NUMBER OF GLOBAL SUPPORT NODE
NUMOUT(7)  = MAX GLOBAL SUPPORT OUTPUT DATA

NUMOUT(8)  = NUMBER OF LOCAL SUPPORT NODE
NUMOUT(9)  = MAX LOCAL SUPPORT OUTPUT DATA

NUMOUT(10) = NUMBER OF FREE NODE
NUMOUT(11) = MAX FREE NODe OUTPUT DATA

NUMOUT(12) = NUMBER OF GLOBAL SPRING
NUMOUT(13) = MAX GLOBAL SPRING OUTPUT DATA

NUMOUT(14) = NUMBER OF LOCAL SPRING
NUMOUT(15) = MAX LOCAL SPRING OUTPUT DATA

NUMOUT(16) = NUMBER OF TENDON
NUMOUT(17) = NUMBER OF DATA REQUIRED FOR EACH GID ELEMENT

NUMOUT(199) = LAST INDEX FOR INTG COMMON
NUMOUT(200) = LAST INDEX FOR REAL COMMON


	SUBROUTINE INIOUT2
	IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
C     ----------------------------------------------------------------
	COMMON /XFOUTP1/ NUMOUT(200),LOUTI(200),LOUTA(200)
	COMMON /XFOUTP2/ IXFOUT(1000),AXFOUT(10000)
C     ----------------------------------------------------------------

C	INTEGER
	LOUTI(1) = 1	
	LOUTI(2) = NUMOUT(2 )*NUMOUT(17) + LOUTI(1)  !DATA REQUIRED FOR EACH GID ELEMENT
	NUMOUT(199) = 2	

	DO I = 1,NUMOUT(199)
	IXFOUT(I) = 0
	ENDDO



C	FLOAT
	LOUTA(1) = 1
	LOUTA(2) = NUMOUT(2 )*NUMOUT(3 ) + LOUTA(1)  !ELEMENT OUTPUT DATA
	LOUTA(3) = NUMOUT(4 )*NUMOUT(5 ) + LOUTA(2)  !LINK OUTPUT DATA
	LOUTA(4) = NUMOUT(6 )*NUMOUT(7 ) + LOUTA(3)  !GLOBAL SUPPORT OUTPUT DATA
	LOUTA(5) = NUMOUT(8 )*NUMOUT(9 ) + LOUTA(4)  !LOCAL SUPPORT OUTPUT DATA
	LOUTA(6) = NUMOUT(10)*NUMOUT(11) + LOUTA(5)  !FREE NODe OUTPUT DATA
	LOUTA(7) = NUMOUT(12)*NUMOUT(13) + LOUTA(6)  !GLOBAL SPRING OUTPUT DATA
	LOUTA(8) = NUMOUT(14)*NUMOUT(15) + LOUTA(7)  !LOCAL SPRING OUTPUT DATA
	NUMOUT(200) = 8

	IF(NUMOUT(16).GT.0) THEN
	LOUTA(9 ) = NUMOUT(2 )*NUMOUT(3 ) + LOUTA(8 )  !ELEMENT OUTPUT DATA  !PRESTRESS TOTAL
	LOUTA(10) = NUMOUT(4 )*NUMOUT(5 ) + LOUTA(9 )  !LINK OUTPUT DATA
	LOUTA(11) = NUMOUT(6 )*NUMOUT(7 ) + LOUTA(10)  !GLOBAL SUPPORT OUTPUT DATA
	LOUTA(12) = NUMOUT(8 )*NUMOUT(9 ) + LOUTA(11)  !LOCAL SUPPORT OUTPUT DATA
	LOUTA(13) = NUMOUT(10)*NUMOUT(11) + LOUTA(12)  !FREE NODe OUTPUT DATA
	LOUTA(14) = NUMOUT(12)*NUMOUT(13) + LOUTA(13)  !GLOBAL SPRING OUTPUT DATA
	LOUTA(15) = NUMOUT(14)*NUMOUT(15) + LOUTA(14)  !LOCAL SPRING OUTPUT DATA	
	LOUTA(16) = NUMOUT(2 )*NUMOUT(3 ) + LOUTA(15)  !PRESTRESS PRIMARY
	LOUTA(17) = NUMOUT(2 )*NUMOUT(3 ) + LOUTA(16)  !PRESTRESS SECONDARY
	NUMOUT(200) = 17
	ENDIF

	DO I = 1,NUMOUT(200)
	AXFOUT(I) = 0.0D0
	ENDDO

      RETURN
      END
C


C	=====================================================================
C	=====================================================================
C	=====================================================================